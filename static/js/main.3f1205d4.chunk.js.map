{"version":3,"sources":["assets/car_icon.svg","assets/reset.svg","assets/play.svg","components/Canvas/utils.ts","components/Canvas/Boundry.ts","components/Canvas/drawLine.ts","components/Canvas/Track.ts","constants/canvas.ts","components/Ray.ts","neuralnetwork/Matrix.ts","neuralnetwork/NeuralNetwork.ts","components/Car.ts","components/Canvas/Canvas.tsx","constants/index.ts","sampleTracks/sample.ts","components/Logo/Logo.tsx","components/Button/Button.tsx","components/ActionMenu/ActionMenu.tsx","pages/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","getCanvas","canvasRef","canvas","current","context","getContext","Boundry","from","to","_from","_to","getBoundry","setBeginningPoints","points","x","y","setEndPoints","getIntersactionOfBoundries","bound1","bound2","firstFrom","firstTo","secondFrom","secondTo","divisor","cross","drawLine","fromPoints","toPoints","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","this","boundaries","path","innerLine","outerLine","length","trackBoundries","boundry","b","push","concat","slice","alpha","mousePosition","newMousePosition","innerBoundry","Math","sin","cos","createInnerTrackBoundry","outerBounry","createOuterTrackBoundry","intersaction","Vector","Ray","angle","distance","vector","a","boundary","x1","x2","y1","y2","x3","x4","y3","y4","den","t","Matrix","rows","cols","data","Array","fill","map","arr","i","j","e","random","n","func","val","console","table","JSON","stringify","_","matrix","sum","k","parse","NeuralNetwork","lr","nodes","activation","sigmoid","dactivation","dsigmoid","weights","biases","randomize","input","fromArray","multiply","add","toArray","baseArr","targetArr","target","output","query","O","error","subtract","gradient","dw","transpose","weight","s","d","l","bias","model","getModel","formModel","net","ratio","r1","r2","tanh","pow","cosh","exp","nn","opacity","linewidth","color","getDist","sqrt","getpDisc","m","A","B","C","abs","mutate","offset","u","v","log","PI","randn_bm","CanvasRenderingContext2D","prototype","roundRect","width","height","radius","upperLeft","upperRight","lowerLeft","lowerRight","quadraticCurveTo","closePath","bestBrain","MOVES","Car","brain","carPosition","turnAngle","turnAngleLeft","turnAngleRight","rays","turn","score","fitness","prevAngle","vision","speed","speedLimit","acceleration","velocity","friction","laps","tyreWidth","tyreHeight","boundingCoordinates","movehistory","straightLineCount","floor","RAY_NUMBER","copy","inputs","index","reduce","iMax","ray","setAngle","dist","Infinity","closestBoundary","ray_dist","Track","hit","isHitting","newX","newY","vx","vy","bestP","bestD","p","r","turnCenterX","turnCenterY","tan","atan","rLeft","rRight","arc","fillStyle","move","goForward","goBackward","calculateScore","calculateTurnAngles","translate","rotate","rect","drawFrontWheels","drawBackWheels","lAng","rAng","restore","allCars","maxScore","gen","Canvas","isCreateMode","drawCars","activeCars","play","setActiveCars","setActiveCarsNumber","setGen","setCreateMode","setCarPosition","createCars","canvasWidth","canvasHeight","useState","isPainting","setIsPainting","setMousePosition","value","setupCars","position","useEffect","style","setSampleTrack","sample","drawTrack","getCoordinates","event","pageX","pageY","clearCanvas","clearRect","draw","paint","useCallback","atan2","getAlpha","setTrackLines","drawTrackLines","nextGeneration","c","unshift","cars","normalizeFitness","newgenerationCars","oldCars","newCars","bestCar","numCars","sndBestCar","babyBrain","merge","babyCar","generate","getPerpendicularDist","start","splice","update","car","alive","moveCar","rayTrace","think","undefined","window","requestAnimationFrame","onMouseDown","coordinates","onMouseUp","setTrackIntersaction","setTrackBoundries","onMouseMove","ref","Logo","className","alt","src","carIcon","Button","children","props","ActionMenu","setPlay","activeCarsNumber","reset","startButtonText","startButtonIcon","resetIcon","playIcon","onClick","App","setactiveCars","useRef","bestCarDrawn","drawCar","drawRays","location","reload","num","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f1205d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car_icon.347d0e2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/reset.d6e9bf4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.d1c4606a.svg\";","import { Points } from '../../types'\n\nexport const getDistance = (fromPoints: Points, toPoints: Points) => {\n    return Math.sqrt(Math.pow(toPoints.x - fromPoints.x, 2) + Math.pow(toPoints.y - fromPoints.y, 2))\n}\n\nexport const getAlpha = (fromPoints: Points, toPoints: Points) => {\n    return Math.atan2(\n        toPoints.y - fromPoints.y,\n        toPoints.x - fromPoints.x\n    )\n}\n\nexport const getCanvas = (canvasRef: any) => ({\n    canvas: canvasRef.current,\n    context: canvasRef.current ? canvasRef.current.getContext('2d') : null,\n})","\nimport { Points, BoundryProps, BoundryInterface } from '../../types'\nimport { TRACK_WIDTH } from '../../constants/canvas'\n\nexport const Boundry: BoundryInterface = (from: Points, to: Points) => {\n    const _from = { ...from }\n    const _to = { ...to }\n\n    const getBoundry = () => (\n        { from: _from, to: _to }\n    )\n\n    const setBeginningPoints = (points: Points) => {\n        _from.x = points.x\n        _from.y = points.y\n    }\n\n    const setEndPoints = (points: Points) => {\n        _to.x = points.x\n        _to.y = points.y\n    }\n\n    return {\n        getBoundry,\n        setBeginningPoints,\n        setEndPoints,\n    }\n\n}\n\nexport const createInnerTrackBoundry = (from: Points, to: Points, alpha: number) => {\n    return Boundry(\n        {\n            x: from.x - TRACK_WIDTH * Math.sin(alpha),\n            y: from.y + TRACK_WIDTH * Math.cos(alpha),\n        },\n        {\n            x: to.x - TRACK_WIDTH * Math.sin(alpha),\n            y: to.y + TRACK_WIDTH * Math.cos(alpha),\n        }\n    )\n}\n\nexport const createOuterTrackBoundry = (from: Points, to: Points, alpha: number) => {\n    return Boundry(\n        {\n            x: from.x + TRACK_WIDTH * Math.sin(alpha),\n            y: from.y - TRACK_WIDTH * Math.cos(alpha),\n        },\n        {\n            x: to.x + TRACK_WIDTH * Math.sin(alpha),\n            y: to.y - TRACK_WIDTH * Math.cos(alpha),\n        }\n    )\n}\n\nexport const getIntersactionOfBoundries = (bound1: BoundryProps, bound2: BoundryProps) => {\n    const { from: firstFrom, to: firstTo } = bound1\n    const { from: secondFrom, to: secondTo } = bound2\n\n\n    const divisor = (secondTo.y - secondFrom.y) * (firstTo.x - firstFrom.x)\n        - (secondTo.x - secondFrom.x) * (firstTo.y - firstFrom.y)\n\n    if (divisor === 0) return null\n\n    const cross = ((secondTo.x - secondFrom.x) * (firstFrom.y - secondFrom.y)\n        - (secondTo.y - secondFrom.y) * (firstFrom.x - secondFrom.x)) / divisor\n\n    const x = firstFrom.x + cross * (firstTo.x - firstFrom.x)\n    const y = firstFrom.y + cross * (firstTo.y - firstFrom.y)\n    return { x, y }\n}\n","type MousePosition = { x: number; y: number }\n\nconst drawLine = (\n  canvas: HTMLCanvasElement,\n  context: any,\n  fromPoints: MousePosition,\n  toPoints: MousePosition,\n  lineWidth: number = 3,\n  strokeStyle: string = 'white'\n): void => {\n  if (!canvas) return\n\n  if (context) {\n    context.lineWidth = lineWidth\n    context.strokeStyle = strokeStyle\n\n    context.beginPath()\n\n    context.moveTo(fromPoints.x, fromPoints.y)\n    context.lineTo(toPoints.x, toPoints.y)\n\n    context.stroke()\n  }\n}\n\nexport default drawLine\n","\n\n// @ts-ignore\n// @ts-nocheck\nimport { Points } from '../../types'\n\nimport {\n    Boundry,\n    createInnerTrackBoundry,\n    createOuterTrackBoundry,\n    getIntersactionOfBoundries,\n} from './Boundry'\n\n\n// interface TrackInterface {\n//     boundaries: Array<BoundryObject>\n// }\nclass Track {\n    constructor() {\n        this.boundaries = []\n        this.path = []\n        this.innerLine = []\n        this.outerLine = []\n    }\n\n\n\n    reset() {\n        this.path.length = 0\n        this.boundaries.length = 0\n        this.innerLine.length = 0\n        this.outerLine.length = 0\n    }\n\n    setSampleTrack(trackBoundries) {\n        this.boundaries.length = 0\n        this.innerLine.length = 0\n        this.outerLine.length = 0\n        for (const boundry of trackBoundries) {\n            const b = Boundry(boundry.from, boundry.to)\n            this.path.push(b)\n            this.boundaries.push(b)\n        }\n\n    }\n    setTrackBoundries() {\n        this.boundaries = this.innerLine.concat(this.outerLine).slice()\n        this.innerLine.length = 0\n        this.outerLine.length = 0\n    }\n\n    setTrackLines(alpha: number, mousePosition: Points, newMousePosition: Points) {\n        let innerBoundry = createInnerTrackBoundry(\n            mousePosition,\n            newMousePosition,\n            alpha\n        )\n\n        let outerBounry = createOuterTrackBoundry(\n            mousePosition,\n            newMousePosition,\n            alpha\n        )\n\n        if (this.innerLine.length > 0) {\n            let intersaction = getIntersactionOfBoundries(\n                innerBoundry.getBoundry(),\n                this.innerLine[this.innerLine.length - 1].getBoundry()\n            )\n            if (intersaction == null) return\n            innerBoundry.setBeginningPoints(intersaction)\n            this.innerLine[this.innerLine.length - 1].setEndPoints(intersaction)\n        }\n\n        if (this.outerLine.length > 0) {\n            let intersaction = getIntersactionOfBoundries(\n                outerBounry.getBoundry(),\n                this.outerLine[this.outerLine.length - 1].getBoundry()\n            )\n            if (intersaction == null) return\n            outerBounry.setBeginningPoints(intersaction)\n            this.outerLine[this.outerLine.length - 1].setEndPoints(intersaction)\n        }\n\n        this.innerLine.push(innerBoundry)\n        this.outerLine.push(outerBounry)\n    }\n\n    setTrackIntersaction() {\n        if (this.innerLine.length > 0) {\n            let intersaction = getIntersactionOfBoundries(\n                this.innerLine[0].getBoundry(),\n                this.innerLine[this.innerLine.length - 1].getBoundry()\n            )\n            if (intersaction != null) {\n                this.innerLine[0].setBeginningPoints(intersaction)\n                this.innerLine[this.innerLine.length - 1].setEndPoints(intersaction)\n            }\n        }\n\n        if (this.outerLine.length > 0) {\n            let intersaction = getIntersactionOfBoundries(\n                this.outerLine[0].getBoundry(),\n                this.outerLine[this.outerLine.length - 1].getBoundry()\n            )\n            if (intersaction != null) {\n                this.outerLine[0].setBeginningPoints(intersaction)\n                this.outerLine[this.outerLine.length - 1].setEndPoints(intersaction)\n            }\n        }\n        if (this.path.length) {\n            let intersaction = getIntersactionOfBoundries(\n                this.path[0].getBoundry(),\n                this.path[this.path.length - 1].getBoundry()\n            )\n            if (intersaction != null) {\n                this.path[0].setBeginningPoints(intersaction)\n                this.path[this.path.length - 1].setEndPoints(intersaction)\n            }\n        }\n\n    }\n}\n\nexport default new Track()\n","export const CANVAS_RES = 2\nexport const TRACK_WIDTH = 40\nexport const MIN_DISTANCE_TO_DRAW = 40","// @ts-nocheck\n// @ts-ignore\n\nfunction Vector(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nclass Ray {\n    distance = 0;\n    constructor(x, y, angle) {\n        this.x = x;\n        this.y = y;\n        this.angle = angle;\n        this.vector = new Vector(this.x + Math.cos(this.angle), this.y + Math.sin(this.angle));\n    }\n\n    setAngle(a) {\n        this.angle = a;\n        this.vector.x = this.x + Math.cos(this.angle);\n        this.vector.y = this.y + Math.sin(this.angle);\n    }\n\n    isHitting(boundary) {\n\n        const { from, to } = boundary.getBoundry()\n        const x1 = from.x;\n        const x2 = to.x;\n        const y1 = from.y;\n        const y2 = to.y;\n\n        const x3 = this.x;\n        const x4 = this.vector.x;\n        const y3 = this.y;\n        const y4 = this.vector.y;\n\n        const den = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n        if (den === 0)\n            return;\n        const t = ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) / den;\n        const u = -((x1 - x2) * (y1 - y3) - (y1 - y2) * (x1 - x3)) / den;\n        // console.log(t, u);\n        if (t >= 0 && t <= 1 && u > 0) {\n            const x = x1 + t * (x2 - x1);\n            const y = y1 + t * (y2 - y1);\n            return new Vector(x, y);\n        } else {\n            return false;\n        }\n\n    }\n\n}\n\nexport default Ray","// @ts-ignore\r\n// @ts-nocheck\r\n\r\nclass Matrix {\r\n  constructor(rows, cols) {\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.data = Array(this.rows).fill().map(() => Array(this.cols).fill(0));\r\n  }\r\n\r\n\r\n  static fromArray(arr) {\r\n    return new Matrix(arr.length, 1).map((e, i) => arr[i]);\r\n  }\r\n\r\n  static subtract(a, b) {\r\n    if (a.rows !== b.rows || a.cols !== b.cols)\r\n      return\r\n\r\n    return new Matrix(a.rows, a.cols)\r\n      .map((_, i, j) => a.data[i][j] - b.data[i][j]);\r\n  }\r\n\r\n  toArray() {\r\n    let arr = [];\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.cols; j++) {\r\n        arr.push(this.data[i][j]);\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  randomize() {\r\n    return this.map(e => Math.random() * 2 - 1);\r\n  }\r\n\r\n  add(n) {\r\n    if (n instanceof Matrix) {\r\n      if (this.rows !== n.rows || this.cols !== n.cols) {\r\n        return;\r\n      }\r\n      return this.map((e, i, j) => e + n.data[i][j]);\r\n    } else {\r\n      return this.map(e => e + n);\r\n    }\r\n  }\r\n\r\n  static transpose(matrix) {\r\n    return new Matrix(matrix.cols, matrix.rows)\r\n      .map((_, i, j) => matrix.data[j][i]);\r\n  }\r\n\r\n  static multiply(a, b) {\r\n    if (a.cols !== b.rows) {\r\n      return;\r\n    }\r\n\r\n    return new Matrix(a.rows, b.cols)\r\n      .map((e, i, j) => {\r\n        let sum = 0;\r\n        for (let k = 0; k < a.cols; k++) {\r\n          sum += a.data[i][k] * b.data[k][j];\r\n        }\r\n        return sum;\r\n      });\r\n  }\r\n\r\n  multiply(n) {\r\n    if (n instanceof Matrix) {\r\n      if (this.rows !== n.rows || this.cols !== n.cols) {\r\n        return;\r\n      }\r\n      return this.map((e, i, j) => e * n.data[i][j]);\r\n    } else {\r\n      return this.map(e => e * n);\r\n    }\r\n  }\r\n\r\n  map(func) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.cols; j++) {\r\n        let val = this.data[i][j];\r\n        this.data[i][j] = func(val, i, j);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  copy() {\r\n    return new Matrix(this.rows, this.cols);\r\n\r\n  }\r\n  static map(matrix, func) {\r\n    return new Matrix(matrix.rows, matrix.cols)\r\n      .map((e, i, j) => func(matrix.data[i][j], i, j));\r\n  }\r\n\r\n  print() {\r\n    console.table(this.data);\r\n    return this;\r\n  }\r\n\r\n  serialize() {\r\n    return JSON.stringify(this);\r\n  }\r\n\r\n  static deserialize(data) {\r\n    if (typeof data == 'string') {\r\n      data = JSON.parse(data);\r\n    }\r\n    let matrix = new Matrix(data.rows, data.cols);\r\n    matrix.data = data.data;\r\n    return matrix;\r\n  }\r\n}\r\n\r\nexport default Matrix\r\n\r\n","// @ts-ignore\r\n// @ts-nocheck\r\n\r\nimport Matrix from './Matrix'\r\n\r\nclass NeuralNetwork {\r\n  constructor(arr, lr) {\r\n    this.nodes = arr\r\n    this.lr = lr || 0.01\r\n    this.activation = NeuralNetwork.sigmoid\r\n    this.dactivation = NeuralNetwork.dsigmoid\r\n    this.weights = []\r\n    this.biases = []\r\n    for (let i = 0; i < this.nodes.length - 1; i++) {\r\n      this.weights.push(new Matrix(this.nodes[i + 1], this.nodes[i]).randomize())\r\n    }\r\n    for (let i = 1; i < this.nodes.length; i++) {\r\n      this.biases.push(new Matrix(this.nodes[i], 1).randomize())\r\n    }\r\n  }\r\n\r\n  static tanh(x) {\r\n    return Math.tanh(x);\r\n\r\n  }\r\n  static dtanh(x) {\r\n    return 1 / (pow(Math.cosh(x), 2));\r\n  }\r\n  static sigmoid(x) {\r\n    return 1 / (1 + Math.exp(-x));\r\n  }\r\n  static dsigmoid(y) {\r\n    return y * (1 - y);\r\n  }\r\n\r\n  query(arr) {\r\n    let input = Matrix.fromArray(arr)\r\n    for (let i = 0; i < this.weights.length; i++) {\r\n      input = Matrix.multiply(this.weights[i], input)\r\n      input.add(this.biases[i])\r\n      input.map(this.activation)\r\n    }\r\n    return input.toArray()\r\n  }\r\n  learn(baseArr, targetArr) {\r\n    let target = Matrix.fromArray(targetArr)\r\n    let output = Matrix.fromArray(this.query(baseArr))\r\n    let O = []\r\n    let input = Matrix.fromArray(baseArr)\r\n    for (let i = 0; i < this.weights.length; i++) {\r\n      O.push(input)\r\n      input = Matrix.multiply(this.weights[i], input)\r\n      input.add(this.biases[i])\r\n      input.map(this.activation)\r\n    }\r\n    let error = Matrix.subtract(target, output)\r\n    let gradient = Matrix.map(output, this.dactivation)\r\n    gradient.multiply(error)\r\n    gradient.multiply(this.lr)\r\n    for (let i = O.length - 1; i >= 0; i--) {\r\n      let dw = Matrix.multiply(gradient, Matrix.transpose(O[i]))\r\n      this.weights[i].add(dw)\r\n      this.biases[i].add(gradient)\r\n      error = Matrix.multiply(Matrix.transpose(this.weights[i]), error)\r\n      gradient = Matrix.map(O[i], this.dactivation)\r\n      gradient.multiply(error)\r\n      gradient.multiply(this.lr)\r\n    }\r\n  }\r\n  getModel() {\r\n    let model = this\r\n    let k = {\r\n      nodes: model.nodes,\r\n      lr: model.lr,\r\n      activation: model.activation,\r\n      dactivation: model.dactivation,\r\n      weights: [],\r\n      biases: []\r\n    }\r\n    for (let weight of model.weights) {\r\n      let s = {\r\n        rows: weight.rows,\r\n        cols: weight.cols,\r\n        data: []\r\n      }\r\n      for (let d of weight.data) {\r\n        let a = []\r\n        for (let l of d) {\r\n          a.push(l)\r\n        }\r\n        s.data.push(a)\r\n      }\r\n      k.weights.push(s)\r\n    }\r\n    for (let bias of model.biases) {\r\n      let s = {\r\n        rows: bias.rows,\r\n        cols: bias.cols,\r\n        data: bias.data\r\n      }\r\n      k.biases.push(s)\r\n    }\r\n    return k\r\n  }\r\n  static formModel(model) {\r\n    let nn = new NeuralNetwork(model.nodes, model.lr)\r\n    nn.nodes = model.nodes\r\n    nn.lr = model.lr\r\n    nn.activation = model.activation\r\n    nn.dactivation = model.dactivation\r\n    for (let i = 0; i < nn.weights.length; i++) {\r\n      nn.weights[i].rows = model.weights[i].rows\r\n      nn.weights[i].cols = model.weights[i].cols\r\n      for (let j = 0; j < model.weights[i].rows; j++) {\r\n        for (let k = 0; k < model.weights[i].cols; k++) {\r\n          nn.weights[i].data[j][k] = model.weights[i].data[j][k]\r\n        }\r\n      }\r\n      nn.weights[i].rows = model.weights[i].rows\r\n    }\r\n    return nn\r\n  }\r\n  copy() {\r\n    let model = this.getModel()\r\n    return NeuralNetwork.formModel(model)\r\n  }\r\n  mutate(func) {\r\n    for (let weight of this.weights) {\r\n      weight.map(func)\r\n    }\r\n    for (let bias of this.biases) {\r\n      bias.map(func)\r\n    }\r\n  }\r\n  merge(net, ratio = 0.5) {\r\n    let r1 = 1 - ratio\r\n    let r2 = ratio\r\n    for (let i = 0; i < this.nodes.length; i++) {\r\n      if (this.nodes[i] !== net.nodes[i]) {\r\n        return\r\n      }\r\n    }\r\n    this.lr = (this.lr * r1) + (net.lr * r2)\r\n    for (let i = 0; i < this.weights.length; i++) {\r\n      for (let j = 0; j < this.weights[i].rows; j++) {\r\n        for (let k = 0; k < this.weights[i].cols; k++) {\r\n          this.weights[i].data[j][k] = (this.weights[i].data[j][k] * r1) + (net.weights[i].data[j][k] * r2)\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < this.biases.length; i++) {\r\n      for (let j = 0; j < this.biases[i].rows; j++) {\r\n        for (let k = 0; k < this.biases[i].cols; k++) {\r\n          this.biases[i].data[j][k] = (this.biases[i].data[j][k] * r1) + (net.biases[i].data[j][k] * r2)\r\n        }\r\n      }\r\n    }\r\n    return this\r\n  }\r\n  setActivation(activation, dactivation) {\r\n    this.activation = activation\r\n    this.dactivation = dactivation\r\n  }\r\n  setLearningRate(lr) {\r\n    this.lr = lr\r\n  }\r\n}\r\nexport default NeuralNetwork\r\n","\n// @ts-ignore\n// @ts-nocheck\n\nimport Ray from './Ray'\nimport NeuralNetwork from '../neuralnetwork/NeuralNetwork'\nimport Track from './Canvas/Track'\nimport { RAY_NUMBER, WHEEL_COLOR, RAY_BULB_COLOR, CAR_COLOR } from '../constants'\n\nCanvasRenderingContext2D.prototype.roundRect = function (x, y, width, height, radius) {\n\n    const { upperLeft = 0, upperRight = 0, lowerLeft = 0, lowerRight = 0 } = radius || {}\n\n    this.beginPath();\n    this.moveTo(x + upperLeft, y);\n    this.lineTo(x + width - upperLeft, y);\n    this.quadraticCurveTo(x + width, y, x + width, y + upperLeft);\n    this.lineTo(x + width, y + height - upperRight);\n    this.quadraticCurveTo(x + width, y + height, x + width - upperRight, y + height);\n    this.lineTo(x + lowerRight, y + height);\n    this.quadraticCurveTo(x, y + height, x, y + height - lowerRight);\n    this.lineTo(x, y + lowerLeft);\n    this.quadraticCurveTo(x, y, x + lowerLeft, y);\n    this.closePath();\n\n}\n\n\nfunction drawLine(context, x1, y1, x2, y2, opacity, linewidth, color) {\n    context.beginPath();\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineWidth = linewidth;\n    context.strokeStyle = \"rgba(\" + color + \", \" + opacity + \")\";\n    context.stroke();\n}\n\n\nfunction getDist(x1, y1, x2, y2) {\n    return Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2));\n}\n\n\nfunction getpDisc(boundary, m, n) {\n    const x1 = boundary.from.x;\n    const x2 = boundary.to.x;\n    const y1 = boundary.from.y;\n    const y2 = boundary.to.y;\n\n    let A = y1 - y2;\n    let B = x2 - x1;\n    let C = x1 * (y2 - y1) - y1 * (x2 - x1);\n\n    let d = Math.abs(A * m + B * n + C) / Math.sqrt(A * A + B * B);\n    return d;\n}\n\nfunction randn_bm() {\n    var u = 0,\n        v = 0;\n    while (u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n    while (v === 0) v = Math.random();\n    return Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n}\n\n\nfunction mutate(x) {\n    if (Math.random() < 0.7) {\n        let offset = randn_bm();\n        if (x + offset > 1)\n            return 1;\n        else if (x + offset < -1)\n            return -1;\n        else\n            return x + offset;\n    } else {\n        return x;\n    }\n}\n\nconst MOVES = [\"L\", \"reduceTurn\", \"R\"];\n\nclass Car {\n    constructor(context, brain?: any, carPosition) {\n        this.x = carPosition.x;\n        this.y = carPosition.y;\n        this.alpha = -Math.PI / 2;\n        this.turnAngle = 0;\n        this.turnAngleLeft = 0;\n        this.turnAngleRight = 0;\n        this.rays = [];\n        this.turn = 0;\n        this.score = 0;\n        this.fitness = 0;\n        this.prevAngle = -1;\n        this.vision = 100;\n        this.width = 40;\n        this.height = 20;\n        this.speed = 3;\n        this.speedLimit = 5;\n        this.acceleration = 0.1;\n        this.velocity = 2;\n        this.friction = 0.01;\n        this.laps = 0;\n        this.tyreWidth = this.width / 4;\n        this.tyreHeight = this.height / 6;\n        this.boundingCoordinates = [];\n        this.movehistory = []\n        this.straightLineCount = 0;\n        this.context = context\n\n\n\n        for (let i = -45 * Math.floor(RAY_NUMBER / 2); i <= 45 * Math.floor(RAY_NUMBER / 2); i += 45) {\n            this.rays.push(new Ray(this.x, this.y, Math.PI * i / 180 + this.alpha));\n        }\n\n        if (brain instanceof NeuralNetwork) {\n            this.brain = brain.copy();\n        } else {\n            this.brain = new NeuralNetwork([this.rays.length, 5, 4, MOVES.length]);\n        }\n    }\n\n    mutate() {\n        this.brain.mutate(mutate);\n    }\n\n    think(inputs) {\n        let p = this.brain.query(inputs);\n        let index = p.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0)\n        return MOVES[index];\n    }\n\n    rayTrace() {\n        let i = -45 * Math.floor(RAY_NUMBER / 2);\n        for (let ray of this.rays) {\n            ray.x = this.x;\n            ray.y = this.y;\n            ray.setAngle(Math.PI * i / 180 + this.alpha);\n            i += 45;\n        }\n\n        for (let ray of this.rays) {\n            let dist = Infinity;\n            let closestBoundary = null;\n            let ray_dist;\n\n            for (let boundary of Track.boundaries) {\n                let hit = ray.isHitting(boundary);\n\n                if (hit) {\n                    ray_dist = getDist(ray.x, ray.y, hit.x, hit.y);\n                    if (ray_dist < dist) {\n                        closestBoundary = hit;\n                        dist = ray_dist;\n                    }\n                }\n            }\n            if (closestBoundary) {\n                let tmp = getDist(ray.x, ray.y, closestBoundary.x, closestBoundary.y);\n                if (tmp > this.vision) {\n                    ray.distance = this.vision;\n                } else {\n                    ray.distance = getDist(ray.x, ray.y, closestBoundary.x, closestBoundary.y);\n                }\n            } else {\n                ray.distance = this.vision;\n            }\n\n        }\n    }\n\n\n    goForward() {\n        let newX = this.x + this.speed * Math.cos(this.alpha);\n        let newY = this.y + this.speed * Math.sin(this.alpha);\n        this.x = newX;\n        this.y = newY;\n    }\n\n    goBackward() {\n        let newX = this.x - this.speed * Math.cos(this.alpha);\n        let newY = this.y - this.speed * Math.sin(this.alpha);\n        this.x = newX;\n        this.y = newY;\n    }\n\n\n    go() {\n        let vx = Math.cos(this.alpha) * this.velocity;\n        let vy = Math.sin(this.alpha) * this.velocity;\n        let newX = this.x + vx;\n        let newY = this.y + vy;\n        this.x = newX;\n        this.y = newY;\n    }\n\n    calculateScore() {\n        // this.score += 0.01;\n        let bestP = 0;\n        let bestD = Infinity;\n        for (let i = 0; i < Track.path.length; i++) {\n            let p = Track.path[i].getBoundry();\n            let d = getpDisc(p, this.x, this.y) + getDist(p.from.x, p.from.y, this.x, this.y);\n            // console.log({ d, bestD })\n            if (d < bestD) {\n                bestD = d;\n                bestP = i;\n            }\n        }\n\n        this.score = this.laps + (bestP / (Track.path.length - 1));\n        // console.log(this.score)\n        if (this.score === this.laps + 1)\n            this.laps++;\n\n    }\n\n\n    turnCar() {\n        this.alpha += this.velocity / this.r;\n        this.x = this.turnCenterX + this.r * Math.sin(this.alpha);\n        this.y = this.turnCenterY - this.r * Math.cos(this.alpha);\n    }\n\n\n    calculateTurnAngles() {\n        let r = (this.width / 2) / Math.tan(this.turnAngle);\n\n        this.turnAngleLeft = Math.atan((this.width / 2) / (r + this.height / 2))\n        this.turnAngleRight = Math.atan((this.width / 2) / (r - this.height / 2))\n\n        this.rLeft = r + this.height / 2;\n        this.rRight = r - this.height / 2\n\n        this.r = r;\n        this.turnCenterX = this.x - this.r * Math.sin(this.alpha);\n        this.turnCenterY = this.y + this.r * Math.cos(this.alpha);\n    }\n\n    drawTurn() {\n        context.beginPath()\n        context.moveTo(this.x, this.y);\n        context.lineTo(this.x - this.r * Math.sin(this.alpha), this.y + this.r * Math.cos(this.alpha))\n        context.lineWidth = 2;\n        context.strokeStyle = \"lightblue\";\n        context.stroke();\n\n        if (this.turnAngle !== 0) {\n            context.beginPath();\n            context.arc(this.x - this.r * Math.sin(this.alpha), this.y + this.r * Math.cos(this.alpha), 4, 0, Math.PI * 2);\n            context.fillStyle = \"lightblue\";\n            context.fill();\n        }\n\n        context.beginPath();\n        context.arc(this.x - this.r * Math.sin(this.alpha), this.y + this.r * Math.cos(this.alpha), Math.abs(this.rLeft), 0, Math.PI * 2);\n        context.strokeStyle = \"rgba(255, 255, 102, 0.6)\";\n        context.stroke();\n\n        context.beginPath();\n        context.arc(this.x - this.r * Math.sin(this.alpha), this.y + this.r * Math.cos(this.alpha), Math.abs(this.rRight), 0, Math.PI * 2);\n        context.strokeStyle = \"rgba(255, 255, 102, 0.6)\";\n        context.stroke();\n    }\n\n    moveCar(move) {\n        switch (move) {\n            case \"F\":\n                this.goForward();\n                break;\n            case \"B\":\n                this.goBackward();\n                break;\n            case \"R\":\n                this.alpha += Math.PI / 45;\n                break;\n            case \"L\":\n                this.alpha -= Math.PI / 45;\n                break;\n            case \"\":\n                break;\n\n        }\n        this.calculateScore()\n    }\n\n\n\n    reduceTurn() {\n        if (this.turnAngle > 0)\n            this.turnAngle -= Math.PI / 150;\n        else if (this.turnAngle < 0)\n            this.turnAngle += Math.PI / 150;\n        if (Math.floor(Math.abs(this.turnAngle * 10)) === 0) {\n            this.turnAngle = 0;\n            this.turnAngleLeft = 0;\n            this.turnAngleRight = 0;\n            this.r = 0;\n            this.rLeft = 0;\n            this.rRight = 0;\n        }\n        this.calculateTurnAngles();\n    }\n\n    drawCar(color = CAR_COLOR) {\n        this.context.beginPath();\n        this.context.translate(this.x, this.y);\n        this.context.rotate(this.alpha);\n        this.context.rect(-this.width / 2, -this.height / 2, this.width, this.height);\n        this.context.fillStyle = color;\n        this.context.fill();\n        this.context.rotate(-this.alpha);\n        this.context.translate(-this.x, -this.y);\n\n        this.calculateTurnAngles();\n        this.drawFrontWheels();\n        this.drawBackWheels();\n    }\n\n    drawFrontWheels() {\n        let lAng = Math.atan((this.height / 2) / (this.width / 4)) - this.alpha;\n        let dist = Math.sqrt(Math.pow(this.width / 4, 2) + Math.pow(this.height / 2, 2));\n        // L\n        this.context.beginPath();\n        this.context.translate(this.x + dist * Math.cos(lAng), this.y - dist * Math.sin(lAng));\n        this.context.rotate(this.alpha + this.turnAngleLeft);\n\n        this.context.rect(-this.tyreWidth / 2, -this.tyreHeight / 2, this.tyreWidth, this.tyreHeight);\n\n        this.context.fillStyle = WHEEL_COLOR;\n        this.context.fill();\n        this.context.rotate(-(this.alpha + this.turnAngleLeft));\n        this.context.translate(-(this.x + dist * Math.cos(lAng)), -(this.y - dist * Math.sin(lAng)));\n\n\n        let rAng = Math.atan((this.height / 2) / (this.width / 4)) + this.alpha;\n        // R\n        this.context.beginPath();\n        this.context.translate(this.x + dist * Math.cos(rAng), this.y + dist * Math.sin(rAng));\n        this.context.rotate(this.alpha + this.turnAngleRight);\n\n        this.context.rect(-this.tyreWidth / 2, -this.tyreHeight / 2, this.tyreWidth, this.tyreHeight);\n\n        this.context.fillStyle = WHEEL_COLOR;\n        this.context.fill();\n        this.context.rotate(-(this.alpha + this.turnAngleRight));\n        this.context.restore();\n        this.context.translate(-(this.x + dist * Math.cos(rAng)), -(this.y + dist * Math.sin(rAng)));\n\n    }\n\n\n    drawBackWheels() {\n        // L\n        this.context.beginPath();\n        this.context.translate(this.x, this.y);\n        this.context.rotate(this.alpha);\n\n        this.context.rect(-this.width / 4 - this.tyreWidth / 2, -this.height / 2 - this.tyreHeight / 2, this.tyreWidth, this.tyreHeight);\n\n        this.context.fillStyle = WHEEL_COLOR;\n        this.context.fill();\n        this.context.rotate(-this.alpha);\n        this.context.translate(-this.x, -this.y);\n\n        // R\n        this.context.beginPath();\n        this.context.translate(this.x, this.y);\n        this.context.rotate(this.alpha);\n\n        this.context.rect(-this.width / 4 - this.tyreWidth / 2, this.height / 2 - this.tyreHeight / 2, this.tyreWidth, this.tyreHeight);\n\n        this.context.fillStyle = WHEEL_COLOR;\n        this.context.fill();\n        this.context.rotate(-this.alpha);\n        this.context.translate(-this.x, -this.y);\n\n    }\n\n    drawRays() {\n        for (let ray of this.rays) {\n            drawLine(this.context, ray.x, ray.y, ray.x + ray.distance * Math.cos(ray.angle), ray.y + ray.distance * Math.sin(ray.angle), 0.3, 1, '#000')\n            this.context.beginPath();\n            this.context.arc(ray.x + ray.distance * Math.cos(ray.angle), ray.y + ray.distance * Math.sin(ray.angle), 3, 0, Math.PI * 2);\n            this.context.fillStyle = RAY_BULB_COLOR;\n            this.context.fill();\n        }\n    }\n\n}\n\n\nexport default Car","/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { Boundry } from './Boundry'\nimport { getDistance, getAlpha, getCanvas } from './utils'\nimport drawLine from './drawLine'\nimport { CANVAS_RES, MIN_DISTANCE_TO_DRAW } from '../../constants/canvas'\nimport Track from './Track'\nimport Car from '../Car'\nimport sample from '../../sampleTracks/sample'\nimport { DEFAULT_CAR_NUMBER } from '../../constants'\n\nimport { Points } from '../../types'\n\ninterface CanvasProps {\n  width?: number\n  height?: number\n  isCreateMode: boolean\n  canvasRef: React.Ref\n  drawCars: any\n  activeCars: any\n  play: boolean\n  newBrain: number\n  setNewBrain(): void\n  setActiveCars(cars: any): any\n  setActiveCarsNumber(): void\n  setGen(): void\n  setCreateMode(): void\n}\n\nlet mousePosition = { x: 0, y: 0 }\nlet requestId\nlet bestBrain\nlet prevBest\nlet allCars = []\nlet genSpeed = 1\nlet maxScore = -1\nlet nextGen = false\nlet gen = 0\n\nfunction getDist(x1, y1, x2, y2) {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\n}\n\nconst Canvas: React.SFC<CanvasProps> = ({\n  width = 1600,\n  height = 870,\n  isCreateMode,\n  canvasRef,\n  drawCars,\n  activeCars,\n  play,\n  setActiveCars,\n  setActiveCarsNumber,\n  setGen,\n  setCreateMode,\n  carPosition,\n  setCarPosition,\n  createCars,\n}) => {\n  const canvasWidth = width * CANVAS_RES\n  const canvasHeight = height * CANVAS_RES\n\n  const [isPainting, setIsPainting] = useState(false)\n\n  const setMousePosition = value => {\n    mousePosition = value\n  }\n\n  const setupCars = () => {\n    const { from } = Track.boundaries[0].getBoundry()\n    const position = { x: from.x - 40, y: from.y }\n    setCarPosition(position)\n    createCars(DEFAULT_CAR_NUMBER, position)\n  }\n\n  useEffect(() => {\n    const { canvas, context } = getCanvas(canvasRef)\n    if (canvas && context) {\n      canvas.width = canvasWidth\n      canvas.height = canvasHeight\n      canvas.style.width = `${canvasWidth / CANVAS_RES}px`\n      canvas.style.height = `${canvasHeight / CANVAS_RES}px`\n      context.translate(canvasWidth / CANVAS_RES, canvasHeight / CANVAS_RES)\n      Track.setSampleTrack(sample)\n      drawTrack()\n      setupCars()\n    }\n  }, [canvasWidth, canvasHeight])\n\n  const getCoordinates = (event: MouseEvent): Points | undefined => {\n    if (!canvasRef.current) {\n      return\n    }\n\n    return {\n      x: CANVAS_RES * event.pageX - canvasWidth / CANVAS_RES,\n      y: CANVAS_RES * event.pageY - canvasHeight / CANVAS_RES,\n    }\n  }\n\n  const startPaint = (event: MouseEvent) => {\n    if (!isCreateMode) return\n    const coordinates = getCoordinates(event)\n\n    if (coordinates) {\n      setMousePosition(coordinates)\n      setIsPainting(true)\n    }\n  }\n\n  const clearCanvas = () => {\n    const { context } = getCanvas(canvasRef)\n    if (context)\n      context.clearRect(\n        -canvasWidth,\n        -canvasHeight,\n        CANVAS_RES * canvasWidth,\n        CANVAS_RES * canvasHeight\n      )\n  }\n\n  const draw = ({ from, to }) => {\n    const { canvas, context } = getCanvas(canvasRef)\n    drawLine(canvas, context, from, to)\n  }\n\n  const drawTrack = () => {\n    // logs for get sample track information\n    // const sampleTrack = []\n    for (let boundary of Track.boundaries) {\n      // sampleTrack.push(boundary.getBoundry())\n\n      draw(boundary.getBoundry())\n    }\n    // console.log(sampleTrack)\n  }\n\n  const drawTrackLines = () => {\n    for (let boundary of Track.innerLine as Array<BoundryObject>) {\n      draw(boundary.getBoundry())\n    }\n\n    for (let boundary of Track.outerLine as Array<BoundryObject>) {\n      draw(boundary.getBoundry())\n    }\n  }\n\n  const paint = useCallback(\n    (event: MouseEvent) => {\n      if (isPainting && isCreateMode) {\n        const newMousePosition = getCoordinates(event)\n        // console.log(newMousePosition)\n        if (mousePosition && newMousePosition) {\n          if (\n            mousePosition.x !== 0 &&\n            mousePosition.y !== 0 &&\n            getDistance(mousePosition, newMousePosition) > MIN_DISTANCE_TO_DRAW\n          ) {\n            const alpha = getAlpha(mousePosition, newMousePosition)\n            Track.path.push(Boundry(mousePosition, newMousePosition))\n            // console.log(Track.path.length)\n            Track.setTrackLines(alpha, mousePosition, newMousePosition)\n            setMousePosition(newMousePosition)\n          }\n        }\n        clearCanvas()\n        drawTrackLines()\n      }\n    },\n    [isPainting, isCreateMode]\n  )\n\n  const exitPaint = () => {\n    if (isPainting && isCreateMode) {\n      Track.setTrackIntersaction()\n      clearCanvas()\n      Track.setTrackBoundries()\n      drawTrack()\n\n      setupCars()\n\n      // Track.reset()\n      setIsPainting(false)\n      setCreateMode(false)\n      setMousePosition(undefined)\n    }\n  }\n\n  function nextGeneration() {\n    if (!allCars.length) return\n    for (let c of activeCars) {\n      allCars.unshift(c)\n    }\n    gen++\n    setGen(gen)\n\n    normalizeFitness(allCars)\n\n    const newgenerationCars = generate(allCars)\n    setActiveCars(newgenerationCars)\n    allCars = []\n  }\n\n  function generate(oldCars) {\n    const { context } = getCanvas(canvasRef)\n    let newCars = []\n\n    let bestCar = oldCars.reduce((x, y) => (x.fitness > y.fitness ? x : y))\n    let numCars = oldCars.length\n    let sndBestCar = oldCars.reduce((x, y) => (x.fitness > y.fitness ? x : y))\n    newCars.push(new Car(context, bestCar.brain, carPosition))\n    newCars.push(new Car(context, sndBestCar.brain, carPosition))\n    while (newCars.length < numCars) {\n      let babyBrain = bestCar.brain.merge(sndBestCar.brain, 0.7)\n      let babyCar = new Car(context, babyBrain, carPosition)\n      babyCar.mutate()\n      newCars.push(babyCar)\n    }\n    return newCars\n  }\n\n  function normalizeFitness(cars) {\n    let sum = 0\n    for (let i = 0; i < cars.length; i++) {\n      sum += cars[i].score\n    }\n    for (let i = 0; i < cars.length; i++) {\n      cars[i].fitness = cars[i].score / sum\n    }\n  }\n\n  const update = () => {\n    clearCanvas()\n\n    for (let j = 0; j < genSpeed; j++) {\n      maxScore = 0\n      for (let i = activeCars.length - 1; i >= 0; i--) {\n        let car = activeCars[i]\n        let alive = true\n        let inputs = []\n\n        car.moveCar('F')\n        car.rayTrace()\n        for (let ray of car.rays) {\n          inputs.push(1 - ray.distance / car.vision)\n          if (ray.distance < car.height / 2) {\n            alive = false\n            allCars.push(car)\n\n            activeCars.splice(i, 1)\n            break\n          }\n        }\n\n        if (alive) {\n          let move = car.think(inputs)\n          car.moveCar(move)\n          car.rayTrace()\n        }\n\n        if (car.score > maxScore) {\n          maxScore = car.score\n          bestBrain = car.brain.copy()\n        }\n      }\n    }\n\n    setActiveCarsNumber(activeCars.length)\n    if (activeCars.length == 0) {\n      if (bestBrain) {\n        prevBest = bestBrain.copy()\n      }\n      nextGeneration()\n      nextGen = false\n    }\n    drawTrack()\n\n    drawCars(undefined, maxScore)\n\n    if (activeCars.length) requestId = window.requestAnimationFrame(update)\n  }\n\n  const getPerpendicularDist = (boundary, m, n) => {\n    const x1 = boundary.from.x\n    const x2 = boundary.to.x\n    const y1 = boundary.from.y\n    const y2 = boundary.to.y\n\n    let A = y1 - y2\n    let B = x2 - x1\n    let C = x1 * (y2 - y1) - y1 * (x2 - x1)\n\n    let d = Math.abs(A * m + B * n + C) / Math.sqrt(A * A + B * B)\n    return d\n  }\n\n  const start = () => {\n    if (!play) return\n    let bestP = 0\n    let bestD = Infinity\n    for (let i = 0; i < Track.path.length; i++) {\n      let p = Track.path[i].getBoundry()\n      let d =\n        getPerpendicularDist(p, 0, 0) +\n        getDist((p.from.x + p.to.x) / 2, (p.from.y + p.to.y) / 2, 20, 339)\n      if (d < bestD) {\n        bestD = d\n        bestP = i\n      }\n    }\n    Track.path = Track.path.concat(Track.path.splice(0, bestP))\n    update()\n  }\n\n  useEffect(() => {\n    start()\n  }, [play, activeCars])\n\n  return (\n    <canvas\n      onMouseDown={startPaint}\n      // onDoubleClick={exitPaint}\n      onMouseUp={exitPaint}\n      onMouseMove={paint}\n      ref={canvasRef}\n    />\n  )\n}\n\nexport default Canvas\n","export const RAY_NUMBER = 3\nexport const RAY_BULB_COLOR = 'orange'\n\nexport const WHEEL_COLOR = 'black'\n\nexport const DEFAULT_CAR_NUMBER = 20\n\nexport const FIRST_CAR_COLOR = 'darkorange'\nexport const CAR_COLOR = 'blue'","export default [\n    {\n        \"from\": {\n            \"x\": -730,\n            \"y\": 4.327640640441643\n        },\n        \"to\": {\n            \"x\": -730,\n            \"y\": -122.99937578003104\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -730,\n            \"y\": -122.99937578003104\n        },\n        \"to\": {\n            \"x\": -732,\n            \"y\": -162.99937578003104\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -732,\n            \"y\": -162.99937578003104\n        },\n        \"to\": {\n            \"x\": -732,\n            \"y\": -204.99937578003104\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -732,\n            \"y\": -204.99937578003104\n        },\n        \"to\": {\n            \"x\": -734.0453769791109,\n            \"y\": -245.90691536224816\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -734.0453769791109,\n            \"y\": -245.90691536224816\n        },\n        \"to\": {\n            \"x\": -735.8428478407069,\n            \"y\": -285.4512743173602\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -735.8428478407069,\n            \"y\": -285.4512743173602\n        },\n        \"to\": {\n            \"x\": -729.2507758952466,\n            \"y\": -323.3556880037565\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -729.2507758952466,\n            \"y\": -323.3556880037565\n        },\n        \"to\": {\n            \"x\": -714.7381669717513,\n            \"y\": -361.4512864279317\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -714.7381669717513,\n            \"y\": -361.4512864279317\n        },\n        \"to\": {\n            \"x\": -704.1426023060154,\n            \"y\": -387.94019809227143\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -704.1426023060154,\n            \"y\": -387.94019809227143\n        },\n        \"to\": {\n            \"x\": -692.4727977718646,\n            \"y\": -394.4234228334663\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -692.4727977718646,\n            \"y\": -394.4234228334663\n        },\n        \"to\": {\n            \"x\": -674.4770204856019,\n            \"y\": -391.7240562405269\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -674.4770204856019,\n            \"y\": -391.7240562405269\n        },\n        \"to\": {\n            \"x\": -645.5115322766628,\n            \"y\": -372.98168151709575\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -645.5115322766628,\n            \"y\": -372.98168151709575\n        },\n        \"to\": {\n            \"x\": -603.5067862062415,\n            \"y\": -353.08469653636985\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -603.5067862062415,\n            \"y\": -353.08469653636985\n        },\n        \"to\": {\n            \"x\": -564.6828558708681,\n            \"y\": -338.7811432549165\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -564.6828558708681,\n            \"y\": -338.7811432549165\n        },\n        \"to\": {\n            \"x\": -524.6864788480542,\n            \"y\": -321.940563455837\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -524.6864788480542,\n            \"y\": -321.940563455837\n        },\n        \"to\": {\n            \"x\": -478.87702514462035,\n            \"y\": -310.4882000299785\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -478.87702514462035,\n            \"y\": -310.4882000299785\n        },\n        \"to\": {\n            \"x\": -431.0080226086807,\n            \"y\": -305.70129977638453\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -431.0080226086807,\n            \"y\": -305.70129977638453\n        },\n        \"to\": {\n            \"x\": -370.7328351385439,\n            \"y\": -314.742577896905\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -370.7328351385439,\n            \"y\": -314.742577896905\n        },\n        \"to\": {\n            \"x\": -335.4159933446615,\n            \"y\": -358.2094601047603\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -335.4159933446615,\n            \"y\": -358.2094601047603\n        },\n        \"to\": {\n            \"x\": -308.3197161285559,\n            \"y\": -389.17663406602384\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -308.3197161285559,\n            \"y\": -389.17663406602384\n        },\n        \"to\": {\n            \"x\": -277.9865775996824,\n            \"y\": -421.6764253469598\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -277.9865775996824,\n            \"y\": -421.6764253469598\n        },\n        \"to\": {\n            \"x\": -255.6488864968192,\n            \"y\": -458.2290107880086\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -255.6488864968192,\n            \"y\": -458.2290107880086\n        },\n        \"to\": {\n            \"x\": -230.77396495508077,\n            \"y\": -486.6574925499954\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -230.77396495508077,\n            \"y\": -486.6574925499954\n        },\n        \"to\": {\n            \"x\": -200.2566424368258,\n            \"y\": -517.1748150682504\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -200.2566424368258,\n            \"y\": -517.1748150682504\n        },\n        \"to\": {\n            \"x\": -176.4811256369016,\n            \"y\": -546.436989591234\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -176.4811256369016,\n            \"y\": -546.436989591234\n        },\n        \"to\": {\n            \"x\": -141.4338362975508,\n            \"y\": -570.9700921287796\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -141.4338362975508,\n            \"y\": -570.9700921287796\n        },\n        \"to\": {\n            \"x\": -104.26905538817559,\n            \"y\": -595.7466127350298\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -104.26905538817559,\n            \"y\": -595.7466127350298\n        },\n        \"to\": {\n            \"x\": -70.77259814417755,\n            \"y\": -606.9120984830291\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -70.77259814417755,\n            \"y\": -606.9120984830291\n        },\n        \"to\": {\n            \"x\": -32.34314575050762,\n            \"y\": -612.4020202535534\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -32.34314575050762,\n            \"y\": -612.4020202535534\n        },\n        \"to\": {\n            \"x\": 6.842712474618864,\n            \"y\": -618\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 6.842712474618864,\n            \"y\": -618\n        },\n        \"to\": {\n            \"x\": 52.98331221542215,\n            \"y\": -618\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 52.98331221542215,\n            \"y\": -618\n        },\n        \"to\": {\n            \"x\": 94.86652964297362,\n            \"y\": -624.2824826141327\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 94.86652964297362,\n            \"y\": -624.2824826141327\n        },\n        \"to\": {\n            \"x\": 134.89639981066054,\n            \"y\": -628.0948512015315\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 134.89639981066054,\n            \"y\": -628.0948512015315\n        },\n        \"to\": {\n            \"x\": 172.04756239214004,\n            \"y\": -629.9524093306054\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 172.04756239214004,\n            \"y\": -629.9524093306054\n        },\n        \"to\": {\n            \"x\": 213.0481583348545,\n            \"y\": -628\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 213.0481583348545,\n            \"y\": -628\n        },\n        \"to\": {\n            \"x\": 305.01668778457787,\n            \"y\": -628\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 305.01668778457787,\n            \"y\": -628\n        },\n        \"to\": {\n            \"x\": 341.45391330139734,\n            \"y\": -622.5344161724771\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 341.45391330139734,\n            \"y\": -622.5344161724771\n        },\n        \"to\": {\n            \"x\": 385.45391330139734,\n            \"y\": -614.5344161724771\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 385.45391330139734,\n            \"y\": -614.5344161724771\n        },\n        \"to\": {\n            \"x\": 425.45391330139734,\n            \"y\": -608.5344161724771\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 425.45391330139734,\n            \"y\": -608.5344161724771\n        },\n        \"to\": {\n            \"x\": 467.56263557601983,\n            \"y\": -600.8782848498184\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 467.56263557601983,\n            \"y\": -600.8782848498184\n        },\n        \"to\": {\n            \"x\": 478.9985673242401,\n            \"y\": -598.0193019127634\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 478.9985673242401,\n            \"y\": -598.0193019127634\n        },\n        \"to\": {\n            \"x\": 480,\n            \"y\": -588.0049751551645\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 480,\n            \"y\": -588.0049751551645\n        },\n        \"to\": {\n            \"x\": 480,\n            \"y\": -548.9993757800311\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 480,\n            \"y\": -548.9993757800311\n        },\n        \"to\": {\n            \"x\": 478.55845440994466,\n            \"y\": -520.1684639789238\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 478.55845440994466,\n            \"y\": -520.1684639789238\n        },\n        \"to\": {\n            \"x\": 466.62002836304646,\n            \"y\": -500.63285772036323\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 466.62002836304646,\n            \"y\": -500.63285772036323\n        },\n        \"to\": {\n            \"x\": 448.47671096603955,\n            \"y\": -488.8930641105352\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 448.47671096603955,\n            \"y\": -488.8930641105352\n        },\n        \"to\": {\n            \"x\": 417.15091727598536,\n            \"y\": -485.9096551876729\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 417.15091727598536,\n            \"y\": -485.9096551876729\n        },\n        \"to\": {\n            \"x\": 376.04994192225934,\n            \"y\": -483.9524658851145\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 376.04994192225934,\n            \"y\": -483.9524658851145\n        },\n        \"to\": {\n            \"x\": 335.00932609036005,\n            \"y\": -481.90043509351955\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 335.00932609036005,\n            \"y\": -481.90043509351955\n        },\n        \"to\": {\n            \"x\": 290.19138224420686,\n            \"y\": -477.41864070890426\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 290.19138224420686,\n            \"y\": -477.41864070890426\n        },\n        \"to\": {\n            \"x\": 242.35905594839107,\n            \"y\": -463.06894282015946\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 242.35905594839107,\n            \"y\": -463.06894282015946\n        },\n        \"to\": {\n            \"x\": 187.16947619527534,\n            \"y\": -432.4080651795397\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 187.16947619527534,\n            \"y\": -432.4080651795397\n        },\n        \"to\": {\n            \"x\": 171.5287823940691,\n            \"y\": -366.71715121447346\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 171.5287823940691,\n            \"y\": -366.71715121447346\n        },\n        \"to\": {\n            \"x\": 177.10712664234748,\n            \"y\": -310.93370873168965\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 177.10712664234748,\n            \"y\": -310.93370873168965\n        },\n        \"to\": {\n            \"x\": 206.69218355720673,\n            \"y\": -262.5217974164654\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 206.69218355720673,\n            \"y\": -262.5217974164654\n        },\n        \"to\": {\n            \"x\": 244.10710259887736,\n            \"y\": -227.44531081489922\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 244.10710259887736,\n            \"y\": -227.44531081489922\n        },\n        \"to\": {\n            \"x\": 284.50187744086276,\n            \"y\": -196.5551888769104\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 284.50187744086276,\n            \"y\": -196.5551888769104\n        },\n        \"to\": {\n            \"x\": 324.64399573549497,\n            \"y\": -181.76598739994063\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 324.64399573549497,\n            \"y\": -181.76598739994063\n        },\n        \"to\": {\n            \"x\": 360.39720834923656,\n            \"y\": -160.31405983169566\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 360.39720834923656,\n            \"y\": -160.31405983169566\n        },\n        \"to\": {\n            \"x\": 396.99278979585335,\n            \"y\": -135.27497778927363\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 396.99278979585335,\n            \"y\": -135.27497778927363\n        },\n        \"to\": {\n            \"x\": 433.82839597108926,\n            \"y\": -108.67148444049216\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 433.82839597108926,\n            \"y\": -108.67148444049216\n        },\n        \"to\": {\n            \"x\": 470.4686182778016,\n            \"y\": -86.28023747527904\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 470.4686182778016,\n            \"y\": -86.28023747527904\n        },\n        \"to\": {\n            \"x\": 501.97362785239096,\n            \"y\": -65.27689775888614\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 501.97362785239096,\n            \"y\": -65.27689775888614\n        },\n        \"to\": {\n            \"x\": 525.1211083810736,\n            \"y\": -40.586251861624724\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 525.1211083810736,\n            \"y\": -40.586251861624724\n        },\n        \"to\": {\n            \"x\": 542.0290661898504,\n            \"y\": -8.461132024948784\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 542.0290661898504,\n            \"y\": -8.461132024948784\n        },\n        \"to\": {\n            \"x\": 560.360531760675,\n            \"y\": 32.27545813243917\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 560.360531760675,\n            \"y\": 32.27545813243917\n        },\n        \"to\": {\n            \"x\": 582.5565569926171,\n            \"y\": 70.61404716942998\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 582.5565569926171,\n            \"y\": 70.61404716942998\n        },\n        \"to\": {\n            \"x\": 597.7424929527594,\n            \"y\": 102.67324530750837\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 597.7424929527594,\n            \"y\": 102.67324530750837\n        },\n        \"to\": {\n            \"x\": 605.3239560140471,\n            \"y\": 140.58056061394666\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 605.3239560140471,\n            \"y\": 140.58056061394666\n        },\n        \"to\": {\n            \"x\": 620.6544238418983,\n            \"y\": 184.38189726495008\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 620.6544238418983,\n            \"y\": 184.38189726495008\n        },\n        \"to\": {\n            \"x\": 636.6544238418983,\n            \"y\": 222.38189726495008\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 636.6544238418983,\n            \"y\": 222.38189726495008\n        },\n        \"to\": {\n            \"x\": 649.8598710038696,\n            \"y\": 260.1117462991538\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 649.8598710038696,\n            \"y\": 260.1117462991538\n        },\n        \"to\": {\n            \"x\": 661.0437797264517,\n            \"y\": 299.2554268281912\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 661.0437797264517,\n            \"y\": 299.2554268281912\n        },\n        \"to\": {\n            \"x\": 668,\n            \"y\": 335.7755832643197\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 668,\n            \"y\": 335.7755832643197\n        },\n        \"to\": {\n            \"x\": 668,\n            \"y\": 375.000624219969\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 668,\n            \"y\": 375.000624219969\n        },\n        \"to\": {\n            \"x\": 666.4469407431358,\n            \"y\": 406.0618093572526\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 666.4469407431358,\n            \"y\": 406.0618093572526\n        },\n        \"to\": {\n            \"x\": 653.3292351576637,\n            \"y\": 433.7547433710271\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 653.3292351576637,\n            \"y\": 433.7547433710271\n        },\n        \"to\": {\n            \"x\": 632.8953694418007,\n            \"y\": 462.70271980183304\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 632.8953694418007,\n            \"y\": 462.70271980183304\n        },\n        \"to\": {\n            \"x\": 608.6378216098657,\n            \"y\": 488.69294962176343\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 608.6378216098657,\n            \"y\": 488.69294962176343\n        },\n        \"to\": {\n            \"x\": 579.1065189045412,\n            \"y\": 512.6871330698395\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 579.1065189045412,\n            \"y\": 512.6871330698395\n        },\n        \"to\": {\n            \"x\": 548.1669366492686,\n            \"y\": 536.7512526017182\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 548.1669366492686,\n            \"y\": 536.7512526017182\n        },\n        \"to\": {\n            \"x\": 516.7290423736249,\n            \"y\": 548.7275932781539\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 516.7290423736249,\n            \"y\": 548.7275932781539\n        },\n        \"to\": {\n            \"x\": 484.00497515516395,\n            \"y\": 552\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 484.00497515516395,\n            \"y\": 552\n        },\n        \"to\": {\n            \"x\": 442.999375780031,\n            \"y\": 552\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 442.999375780031,\n            \"y\": 552\n        },\n        \"to\": {\n            \"x\": 413.66472925502256,\n            \"y\": 550.5332676737496\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 413.66472925502256,\n            \"y\": 550.5332676737496\n        },\n        \"to\": {\n            \"x\": 388.57779642494324,\n            \"y\": 536.0092539300194\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 388.57779642494324,\n            \"y\": 536.0092539300194\n        },\n        \"to\": {\n            \"x\": 360.74035055459524,\n            \"y\": 508.17180805967143\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 360.74035055459524,\n            \"y\": 508.17180805967143\n        },\n        \"to\": {\n            \"x\": 336.57312903058244,\n            \"y\": 482.39343843405777\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 336.57312903058244,\n            \"y\": 482.39343843405777\n        },\n        \"to\": {\n            \"x\": 322.5205283543249,\n            \"y\": 445.50536165888167\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 322.5205283543249,\n            \"y\": 445.50536165888167\n        },\n        \"to\": {\n            \"x\": 299.54784180032533,\n            \"y\": 401.85725720628255\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 299.54784180032533,\n            \"y\": 401.85725720628255\n        },\n        \"to\": {\n            \"x\": 269.7433575631742,\n            \"y\": 365.1748150682504\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 269.7433575631742,\n            \"y\": 365.1748150682504\n        },\n        \"to\": {\n            \"x\": 236.77178621839445,\n            \"y\": 332.2032437234706\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 236.77178621839445,\n            \"y\": 332.2032437234706\n        },\n        \"to\": {\n            \"x\": 207.45275888134287,\n            \"y\": 300.79000014805825\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 207.45275888134287,\n            \"y\": 300.79000014805825\n        },\n        \"to\": {\n            \"x\": 172.91886686396487,\n            \"y\": 272.35032436904106\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 172.91886686396487,\n            \"y\": 272.35032436904106\n        },\n        \"to\": {\n            \"x\": 141.2878255268402,\n            \"y\": 240.7192830319164\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 141.2878255268402,\n            \"y\": 240.7192830319164\n        },\n        \"to\": {\n            \"x\": 101.87006276109406,\n            \"y\": 215.21367183055122\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 101.87006276109406,\n            \"y\": 215.21367183055122\n        },\n        \"to\": {\n            \"x\": 67.81587446471983,\n            \"y\": 198.18657768236412\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 67.81587446471983,\n            \"y\": 198.18657768236412\n        },\n        \"to\": {\n            \"x\": 41.86339038609331,\n            \"y\": 177.10018436848006\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 41.86339038609331,\n            \"y\": 177.10018436848006\n        },\n        \"to\": {\n            \"x\": 13.8633903860933,\n            \"y\": 145.10018436848006\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 13.8633903860933,\n            \"y\": 145.10018436848006\n        },\n        \"to\": {\n            \"x\": -25.934895782929647,\n            \"y\": 112.7640768561489\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -25.934895782929647,\n            \"y\": 112.7640768561489\n        },\n        \"to\": {\n            \"x\": -75.90266739477134,\n            \"y\": 94.35489784125986\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -75.90266739477134,\n            \"y\": 94.35489784125986\n        },\n        \"to\": {\n            \"x\": -124.81598968288577,\n            \"y\": 91.90923172685413\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -124.81598968288577,\n            \"y\": 91.90923172685413\n        },\n        \"to\": {\n            \"x\": -189.10818090251155,\n            \"y\": 97.75397638318374\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -189.10818090251155,\n            \"y\": 97.75397638318374\n        },\n        \"to\": {\n            \"x\": -228.34082447228852,\n            \"y\": 149.05820258981515\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -228.34082447228852,\n            \"y\": 149.05820258981515\n        },\n        \"to\": {\n            \"x\": -249.6613334609871,\n            \"y\": 194.06816601040106\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -249.6613334609871,\n            \"y\": 194.06816601040106\n        },\n        \"to\": {\n            \"x\": -263.7332236183763,\n            \"y\": 245.66509658749476\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -263.7332236183763,\n            \"y\": 245.66509658749476\n        },\n        \"to\": {\n            \"x\": -265.9524658851145,\n            \"y\": 290.04994192225945\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -265.9524658851145,\n            \"y\": 290.04994192225945\n        },\n        \"to\": {\n            \"x\": -267.6777802176326,\n            \"y\": 326.2815429051383\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -267.6777802176326,\n            \"y\": 326.2815429051383\n        },\n        \"to\": {\n            \"x\": -278.1768807862859,\n            \"y\": 356.2789731012906\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -278.1768807862859,\n            \"y\": 356.2789731012906\n        },\n        \"to\": {\n            \"x\": -298.31327969792585,\n            \"y\": 387.39886232837057\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -298.31327969792585,\n            \"y\": 387.39886232837057\n        },\n        \"to\": {\n            \"x\": -315.21642613435466,\n            \"y\": 417.8245259139424\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -315.21642613435466,\n            \"y\": 417.8245259139424\n        },\n        \"to\": {\n            \"x\": -340.7662314860856,\n            \"y\": 438.5837427622238\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -340.7662314860856,\n            \"y\": 438.5837427622238\n        },\n        \"to\": {\n            \"x\": -372.26085587994584,\n            \"y\": 462.6678672987051\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -372.26085587994584,\n            \"y\": 462.6678672987051\n        },\n        \"to\": {\n            \"x\": -402.9678931319318,\n            \"y\": 480.4456257077496\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -402.9678931319318,\n            \"y\": 480.4456257077496\n        },\n        \"to\": {\n            \"x\": -441.58766277239465,\n            \"y\": 489.6408089554789\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -441.58766277239465,\n            \"y\": 489.6408089554789\n        },\n        \"to\": {\n            \"x\": -478.7290045946149,\n            \"y\": 503.32446120577055\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -478.7290045946149,\n            \"y\": 503.32446120577055\n        },\n        \"to\": {\n            \"x\": -517.6647261315508,\n            \"y\": 510.7407891175679\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -517.6647261315508,\n            \"y\": 510.7407891175679\n        },\n        \"to\": {\n            \"x\": -554.8584742854471,\n            \"y\": 518.1795387483471\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -554.8584742854471,\n            \"y\": 518.1795387483471\n        },\n        \"to\": {\n            \"x\": -596.9003606973583,\n            \"y\": 520.0905335852523\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -596.9003606973583,\n            \"y\": 520.0905335852523\n        },\n        \"to\": {\n            \"x\": -630.615696899918,\n            \"y\": 523.4620672055082\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -630.615696899918,\n            \"y\": 523.4620672055082\n        },\n        \"to\": {\n            \"x\": -663.6540859958811,\n            \"y\": 514.4515974520638\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -663.6540859958811,\n            \"y\": 514.4515974520638\n        },\n        \"to\": {\n            \"x\": -693.2100848632358,\n            \"y\": 499.6735980183863\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -693.2100848632358,\n            \"y\": 499.6735980183863\n        },\n        \"to\": {\n            \"x\": -722.2915417612368,\n            \"y\": 478.67032359205234\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -722.2915417612368,\n            \"y\": 478.67032359205234\n        },\n        \"to\": {\n            \"x\": -736.703398524521,\n            \"y\": 460.93265372954863\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -736.703398524521,\n            \"y\": 460.93265372954863\n        },\n        \"to\": {\n            \"x\": -737.5253593236354,\n            \"y\": 444.4934377472622\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -737.5253593236354,\n            \"y\": 444.4934377472622\n        },\n        \"to\": {\n            \"x\": -726.1865776823643,\n            \"y\": 421.81587446472\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -726.1865776823643,\n            \"y\": 421.81587446472\n        },\n        \"to\": {\n            \"x\": -705.1001843684801,\n            \"y\": 395.8633903860934\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -705.1001843684801,\n            \"y\": 395.8633903860934\n        },\n        \"to\": {\n            \"x\": -675.1766340660238,\n            \"y\": 369.68028387144403\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -675.1766340660238,\n            \"y\": 369.68028387144403\n        },\n        \"to\": {\n            \"x\": -649.9138399661215,\n            \"y\": 346.1016760448686\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -649.9138399661215,\n            \"y\": 346.1016760448686\n        },\n        \"to\": {\n            \"x\": -619.3171441291319,\n            \"y\": 333.2188567450835\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -619.3171441291319,\n            \"y\": 333.2188567450835\n        },\n        \"to\": {\n            \"x\": -576.5018774408628,\n            \"y\": 317.4448111230896\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -576.5018774408628,\n            \"y\": 317.4448111230896\n        },\n        \"to\": {\n            \"x\": -533.9410373164753,\n            \"y\": 284.8982863220874\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -533.9410373164753,\n            \"y\": 284.8982863220874\n        },\n        \"to\": {\n            \"x\": -501.35205356623817,\n            \"y\": 244.7887678602572\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -501.35205356623817,\n            \"y\": 244.7887678602572\n        },\n        \"to\": {\n            \"x\": -477.156906798641,\n            \"y\": 187.32529428721384\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -477.156906798641,\n            \"y\": 187.32529428721384\n        },\n        \"to\": {\n            \"x\": -503.3716487548796,\n            \"y\": 112.42603155510349\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -503.3716487548796,\n            \"y\": 112.42603155510349\n        },\n        \"to\": {\n            \"x\": -568.0945626641249,\n            \"y\": 96.24530307779217\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -568.0945626641249,\n            \"y\": 96.24530307779217\n        },\n        \"to\": {\n            \"x\": -619.8231785295816,\n            \"y\": 93.65887228451935\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -619.8231785295816,\n            \"y\": 93.65887228451935\n        },\n        \"to\": {\n            \"x\": -667.5220155337539,\n            \"y\": 110.35346523597967\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -667.5220155337539,\n            \"y\": 110.35346523597967\n        },\n        \"to\": {\n            \"x\": -705.5220155337538,\n            \"y\": 124.35346523597963\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -705.5220155337538,\n            \"y\": 124.35346523597963\n        },\n        \"to\": {\n            \"x\": -742.580560613946,\n            \"y\": 137.32395601404693\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -742.580560613946,\n            \"y\": 137.32395601404693\n        },\n        \"to\": {\n            \"x\": -772.9847407897969,\n            \"y\": 143.4047920492171\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -772.9847407897969,\n            \"y\": 143.4047920492171\n        },\n        \"to\": {\n            \"x\": -789.1726236921295,\n            \"y\": 140.9766096138672\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -789.1726236921295,\n            \"y\": 140.9766096138672\n        },\n        \"to\": {\n            \"x\": -800.2859022205483,\n            \"y\": 125.23279836527377\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -800.2859022205483,\n            \"y\": 125.23279836527377\n        },\n        \"to\": {\n            \"x\": -809.2819837846458,\n            \"y\": 100.81486269129482\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -809.2819837846458,\n            \"y\": 100.81486269129482\n        },\n        \"to\": {\n            \"x\": -807.542408266557,\n            \"y\": 83.41910751040587\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -807.542408266557,\n            \"y\": 83.41910751040587\n        },\n        \"to\": {\n            \"x\": -794.5942168204059,\n            \"y\": 69.54604524667256\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -794.5942168204059,\n            \"y\": 69.54604524667256\n        },\n        \"to\": {\n            \"x\": -749.4584768472765,\n            \"y\": 50.54152315272336\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -749.4584768472765,\n            \"y\": 50.54152315272336\n        },\n        \"to\": {\n            \"x\": -730,\n            \"y\": 4.327640640441643\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -810,\n            \"y\": -11.827640640441587\n        },\n        \"to\": {\n            \"x\": -810,\n            \"y\": -121.00062421996896\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -810,\n            \"y\": -121.00062421996896\n        },\n        \"to\": {\n            \"x\": -812,\n            \"y\": -161.00062421996896\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -812,\n            \"y\": -161.00062421996896\n        },\n        \"to\": {\n            \"x\": -812,\n            \"y\": -203.00062421996896\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -812,\n            \"y\": -203.00062421996896\n        },\n        \"to\": {\n            \"x\": -813.9546230208891,\n            \"y\": -242.09308463775184\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -813.9546230208891,\n            \"y\": -242.09308463775184\n        },\n        \"to\": {\n            \"x\": -816.1571521592931,\n            \"y\": -290.5487256826398\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -816.1571521592931,\n            \"y\": -290.5487256826398\n        },\n        \"to\": {\n            \"x\": -806.7492241047534,\n            \"y\": -344.6443119962435\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -806.7492241047534,\n            \"y\": -344.6443119962435\n        },\n        \"to\": {\n            \"x\": -789.2618330282487,\n            \"y\": -390.5487135720682\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -789.2618330282487,\n            \"y\": -390.5487135720682\n        },\n        \"to\": {\n            \"x\": -767.8573976939846,\n            \"y\": -444.05980190772857\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -767.8573976939846,\n            \"y\": -444.05980190772857\n        },\n        \"to\": {\n            \"x\": -707.5272022281354,\n            \"y\": -477.5765771665337\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -707.5272022281354,\n            \"y\": -477.5765771665337\n        },\n        \"to\": {\n            \"x\": -645.5229795143981,\n            \"y\": -468.2759437594731\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -645.5229795143981,\n            \"y\": -468.2759437594731\n        },\n        \"to\": {\n            \"x\": -606.4884677233373,\n            \"y\": -443.0183184829043\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -606.4884677233373,\n            \"y\": -443.0183184829043\n        },\n        \"to\": {\n            \"x\": -572.4932137937585,\n            \"y\": -426.91530346363015\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -572.4932137937585,\n            \"y\": -426.91530346363015\n        },\n        \"to\": {\n            \"x\": -535.3171441291319,\n            \"y\": -413.2188567450835\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -535.3171441291319,\n            \"y\": -413.2188567450835\n        },\n        \"to\": {\n            \"x\": -499.3135211519457,\n            \"y\": -398.059436544163\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -499.3135211519457,\n            \"y\": -398.059436544163\n        },\n        \"to\": {\n            \"x\": -465.12297485537965,\n            \"y\": -389.5117999700215\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -465.12297485537965,\n            \"y\": -389.5117999700215\n        },\n        \"to\": {\n            \"x\": -432.9919773913193,\n            \"y\": -386.29870022361547\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -432.9919773913193,\n            \"y\": -386.29870022361547\n        },\n        \"to\": {\n            \"x\": -413.2671648614561,\n            \"y\": -389.25742210309494\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -413.2671648614561,\n            \"y\": -389.25742210309494\n        },\n        \"to\": {\n            \"x\": -396.5840066553385,\n            \"y\": -409.7905398952397\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -396.5840066553385,\n            \"y\": -409.7905398952397\n        },\n        \"to\": {\n            \"x\": -367.6802838714441,\n            \"y\": -442.82336593397616\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -367.6802838714441,\n            \"y\": -442.82336593397616\n        },\n        \"to\": {\n            \"x\": -342.0134224003176,\n            \"y\": -470.3235746530402\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -342.0134224003176,\n            \"y\": -470.3235746530402\n        },\n        \"to\": {\n            \"x\": -320.3511135031809,\n            \"y\": -505.77098921199126\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -320.3511135031809,\n            \"y\": -505.77098921199126\n        },\n        \"to\": {\n            \"x\": -289.2260350449196,\n            \"y\": -541.3425074500042\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -289.2260350449196,\n            \"y\": -541.3425074500042\n        },\n        \"to\": {\n            \"x\": -259.7433575631742,\n            \"y\": -570.8251849317496\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -259.7433575631742,\n            \"y\": -570.8251849317496\n        },\n        \"to\": {\n            \"x\": -231.5188743630984,\n            \"y\": -605.563010408766\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -231.5188743630984,\n            \"y\": -605.563010408766\n        },\n        \"to\": {\n            \"x\": -186.56616370244933,\n            \"y\": -637.0299078712203\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -186.56616370244933,\n            \"y\": -637.0299078712203\n        },\n        \"to\": {\n            \"x\": -139.73094461182444,\n            \"y\": -668.2533872649702\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -139.73094461182444,\n            \"y\": -668.2533872649702\n        },\n        \"to\": {\n            \"x\": -89.22740185582249,\n            \"y\": -685.0879015169709\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -89.22740185582249,\n            \"y\": -685.0879015169709\n        },\n        \"to\": {\n            \"x\": -43.65685424949238,\n            \"y\": -691.5979797464466\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -43.65685424949238,\n            \"y\": -691.5979797464466\n        },\n        \"to\": {\n            \"x\": 1.1572875253811312,\n            \"y\": -698\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 1.1572875253811312,\n            \"y\": -698\n        },\n        \"to\": {\n            \"x\": 47.01668778457785,\n            \"y\": -698\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 47.01668778457785,\n            \"y\": -698\n        },\n        \"to\": {\n            \"x\": 85.13347035702638,\n            \"y\": -703.7175173858673\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 85.13347035702638,\n            \"y\": -703.7175173858673\n        },\n        \"to\": {\n            \"x\": 129.10360018933946,\n            \"y\": -707.9051487984685\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 129.10360018933946,\n            \"y\": -707.9051487984685\n        },\n        \"to\": {\n            \"x\": 171.95243760785996,\n            \"y\": -710.0475906693946\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 171.95243760785996,\n            \"y\": -710.0475906693946\n        },\n        \"to\": {\n            \"x\": 214.95184166514557,\n            \"y\": -708\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 214.95184166514557,\n            \"y\": -708\n        },\n        \"to\": {\n            \"x\": 310.98331221542213,\n            \"y\": -708\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 310.98331221542213,\n            \"y\": -708\n        },\n        \"to\": {\n            \"x\": 354.5460866986026,\n            \"y\": -701.4655838275229\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 354.5460866986026,\n            \"y\": -701.4655838275229\n        },\n        \"to\": {\n            \"x\": 398.54608669860266,\n            \"y\": -693.4655838275229\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 398.54608669860266,\n            \"y\": -693.4655838275229\n        },\n        \"to\": {\n            \"x\": 438.5460866986026,\n            \"y\": -687.4655838275229\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 438.5460866986026,\n            \"y\": -687.4655838275229\n        },\n        \"to\": {\n            \"x\": 484.43736442398017,\n            \"y\": -679.1217151501816\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 484.43736442398017,\n            \"y\": -679.1217151501816\n        },\n        \"to\": {\n            \"x\": 553.0014326757599,\n            \"y\": -661.9806980872366\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 553.0014326757599,\n            \"y\": -661.9806980872366\n        },\n        \"to\": {\n            \"x\": 560,\n            \"y\": -591.995024844836\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 560,\n            \"y\": -591.995024844836\n        },\n        \"to\": {\n            \"x\": 560,\n            \"y\": -547.0006242199689\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 560,\n            \"y\": -547.0006242199689\n        },\n        \"to\": {\n            \"x\": 557.4415455900554,\n            \"y\": -495.831536021076\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 557.4415455900554,\n            \"y\": -495.831536021076\n        },\n        \"to\": {\n            \"x\": 525.3799716369537,\n            \"y\": -443.3671422796369\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 525.3799716369537,\n            \"y\": -443.3671422796369\n        },\n        \"to\": {\n            \"x\": 475.52328903396045,\n            \"y\": -411.1069358894648\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 475.52328903396045,\n            \"y\": -411.1069358894648\n        },\n        \"to\": {\n            \"x\": 422.84908272401464,\n            \"y\": -406.0903448123271\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 422.84908272401464,\n            \"y\": -406.0903448123271\n        },\n        \"to\": {\n            \"x\": 379.95005807774055,\n            \"y\": -404.0475341148855\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 379.95005807774055,\n            \"y\": -404.0475341148855\n        },\n        \"to\": {\n            \"x\": 340.99067390963995,\n            \"y\": -402.09956490648045\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 340.99067390963995,\n            \"y\": -402.09956490648045\n        },\n        \"to\": {\n            \"x\": 305.80861775579314,\n            \"y\": -398.5813592910958\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 305.80861775579314,\n            \"y\": -398.5813592910958\n        },\n        \"to\": {\n            \"x\": 273.64094405160887,\n            \"y\": -388.9310571798405\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 273.64094405160887,\n            \"y\": -388.9310571798405\n        },\n        \"to\": {\n            \"x\": 256.8305238047247,\n            \"y\": -379.5919348204604\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 256.8305238047247,\n            \"y\": -379.5919348204604\n        },\n        \"to\": {\n            \"x\": 252.4712176059309,\n            \"y\": -361.28284878552654\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 252.4712176059309,\n            \"y\": -361.28284878552654\n        },\n        \"to\": {\n            \"x\": 254.89287335765252,\n            \"y\": -337.06629126831035\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 254.89287335765252,\n            \"y\": -337.06629126831035\n        },\n        \"to\": {\n            \"x\": 269.30781644279335,\n            \"y\": -313.47820258353454\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 269.30781644279335,\n            \"y\": -313.47820258353454\n        },\n        \"to\": {\n            \"x\": 295.8928974011225,\n            \"y\": -288.5546891851009\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 295.8928974011225,\n            \"y\": -288.5546891851009\n        },\n        \"to\": {\n            \"x\": 323.49812255913736,\n            \"y\": -267.4448111230896\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 323.49812255913736,\n            \"y\": -267.4448111230896\n        },\n        \"to\": {\n            \"x\": 359.35600426450503,\n            \"y\": -254.23401260005937\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 359.35600426450503,\n            \"y\": -254.23401260005937\n        },\n        \"to\": {\n            \"x\": 403.60279165076344,\n            \"y\": -227.68594016830434\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 403.60279165076344,\n            \"y\": -227.68594016830434\n        },\n        \"to\": {\n            \"x\": 443.00721020414676,\n            \"y\": -200.72502221072625\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 443.00721020414676,\n            \"y\": -200.72502221072625\n        },\n        \"to\": {\n            \"x\": 478.17160402891074,\n            \"y\": -175.32851555950782\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 478.17160402891074,\n            \"y\": -175.32851555950782\n        },\n        \"to\": {\n            \"x\": 513.5313817221984,\n            \"y\": -153.71976252472098\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 513.5313817221984,\n            \"y\": -153.71976252472098\n        },\n        \"to\": {\n            \"x\": 554.0263721476089,\n            \"y\": -126.72310224111393\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 554.0263721476089,\n            \"y\": -126.72310224111393\n        },\n        \"to\": {\n            \"x\": 590.8788916189264,\n            \"y\": -87.41374813837525\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 590.8788916189264,\n            \"y\": -87.41374813837525\n        },\n        \"to\": {\n            \"x\": 613.9709338101496,\n            \"y\": -43.538867975051204\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 613.9709338101496,\n            \"y\": -43.538867975051204\n        },\n        \"to\": {\n            \"x\": 631.6394682393251,\n            \"y\": -4.2754581324391285\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 631.6394682393251,\n            \"y\": -4.2754581324391285\n        },\n        \"to\": {\n            \"x\": 653.4434430073829,\n            \"y\": 33.38595283057002\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 653.4434430073829,\n            \"y\": 33.38595283057002\n        },\n        \"to\": {\n            \"x\": 674.2575070472406,\n            \"y\": 77.3267546924916\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 674.2575070472406,\n            \"y\": 77.3267546924916\n        },\n        \"to\": {\n            \"x\": 682.6760439859529,\n            \"y\": 119.41943938605333\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 682.6760439859529,\n            \"y\": 119.41943938605333\n        },\n        \"to\": {\n            \"x\": 695.3455761581017,\n            \"y\": 155.61810273504992\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 695.3455761581017,\n            \"y\": 155.61810273504992\n        },\n        \"to\": {\n            \"x\": 711.3455761581017,\n            \"y\": 193.61810273504992\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 711.3455761581017,\n            \"y\": 193.61810273504992\n        },\n        \"to\": {\n            \"x\": 726.1401289961303,\n            \"y\": 235.8882537008461\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 726.1401289961303,\n            \"y\": 235.8882537008461\n        },\n        \"to\": {\n            \"x\": 738.9562202735483,\n            \"y\": 280.74457317180884\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 738.9562202735483,\n            \"y\": 280.74457317180884\n        },\n        \"to\": {\n            \"x\": 748,\n            \"y\": 328.2244167356803\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 748,\n            \"y\": 328.2244167356803\n        },\n        \"to\": {\n            \"x\": 748,\n            \"y\": 376.999375780031\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 748,\n            \"y\": 376.999375780031\n        },\n        \"to\": {\n            \"x\": 745.5530592568642,\n            \"y\": 425.9381906427474\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 745.5530592568642,\n            \"y\": 425.9381906427474\n        },\n        \"to\": {\n            \"x\": 722.6707648423363,\n            \"y\": 474.245256628973\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 722.6707648423363,\n            \"y\": 474.245256628973\n        },\n        \"to\": {\n            \"x\": 695.1046305581991,\n            \"y\": 513.2972801981672\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 695.1046305581991,\n            \"y\": 513.2972801981672\n        },\n        \"to\": {\n            \"x\": 663.3621783901345,\n            \"y\": 547.3070503782363\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 663.3621783901345,\n            \"y\": 547.3070503782363\n        },\n        \"to\": {\n            \"x\": 628.8934810954588,\n            \"y\": 575.3128669301605\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 628.8934810954588,\n            \"y\": 575.3128669301605\n        },\n        \"to\": {\n            \"x\": 587.8330633507314,\n            \"y\": 607.2487473982818\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 587.8330633507314,\n            \"y\": 607.2487473982818\n        },\n        \"to\": {\n            \"x\": 535.270957626375,\n            \"y\": 627.2724067218461\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 535.270957626375,\n            \"y\": 627.2724067218461\n        },\n        \"to\": {\n            \"x\": 487.99502484483605,\n            \"y\": 632\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 487.99502484483605,\n            \"y\": 632\n        },\n        \"to\": {\n            \"x\": 441.000624219969,\n            \"y\": 632\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 441.000624219969,\n            \"y\": 632\n        },\n        \"to\": {\n            \"x\": 390.33527074497744,\n            \"y\": 629.4667323262504\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 390.33527074497744,\n            \"y\": 629.4667323262504\n        },\n        \"to\": {\n            \"x\": 339.42220357505676,\n            \"y\": 599.9907460699806\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 339.42220357505676,\n            \"y\": 599.9907460699806\n        },\n        \"to\": {\n            \"x\": 303.25964944540476,\n            \"y\": 563.8281919403286\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 303.25964944540476,\n            \"y\": 563.8281919403286\n        },\n        \"to\": {\n            \"x\": 267.4268709694176,\n            \"y\": 525.6065615659423\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 267.4268709694176,\n            \"y\": 525.6065615659423\n        },\n        \"to\": {\n            \"x\": 249.47947164567503,\n            \"y\": 478.4946383411181\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 249.47947164567503,\n            \"y\": 478.4946383411181\n        },\n        \"to\": {\n            \"x\": 232.45215819967467,\n            \"y\": 446.14274279371745\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 232.45215819967467,\n            \"y\": 446.14274279371745\n        },\n        \"to\": {\n            \"x\": 210.2566424368258,\n            \"y\": 418.8251849317496\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 210.2566424368258,\n            \"y\": 418.8251849317496\n        },\n        \"to\": {\n            \"x\": 179.2282137816056,\n            \"y\": 387.79675627652944\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 179.2282137816056,\n            \"y\": 387.79675627652944\n        },\n        \"to\": {\n            \"x\": 152.54724111865713,\n            \"y\": 359.20999985194175\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 152.54724111865713,\n            \"y\": 359.20999985194175\n        },\n        \"to\": {\n            \"x\": 119.08113313603512,\n            \"y\": 331.64967563095894\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 119.08113313603512,\n            \"y\": 331.64967563095894\n        },\n        \"to\": {\n            \"x\": 90.71217447315982,\n            \"y\": 303.28071696808365\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 90.71217447315982,\n            \"y\": 303.28071696808365\n        },\n        \"to\": {\n            \"x\": 62.12993723890596,\n            \"y\": 284.7863281694488\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 62.12993723890596,\n            \"y\": 284.7863281694488\n        },\n        \"to\": {\n            \"x\": 24.184125535280074,\n            \"y\": 265.81342231763585\n        }\n    },\n    {\n        \"from\": {\n            \"x\": 24.184125535280074,\n            \"y\": 265.81342231763585\n        },\n        \"to\": {\n            \"x\": -13.863390386093322,\n            \"y\": 234.8998156315199\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -13.863390386093322,\n            \"y\": 234.8998156315199\n        },\n        \"to\": {\n            \"x\": -41.86339038609329,\n            \"y\": 202.89981563151994\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -41.86339038609329,\n            \"y\": 202.89981563151994\n        },\n        \"to\": {\n            \"x\": -66.06510421707031,\n            \"y\": 183.23592314385112\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -66.06510421707031,\n            \"y\": 183.23592314385112\n        },\n        \"to\": {\n            \"x\": -92.09733260522866,\n            \"y\": 173.64510215874014\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -92.09733260522866,\n            \"y\": 173.64510215874014\n        },\n        \"to\": {\n            \"x\": -123.18401031711423,\n            \"y\": 172.09076827314587\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -123.18401031711423,\n            \"y\": 172.09076827314587\n        },\n        \"to\": {\n            \"x\": -146.89181909748845,\n            \"y\": 174.24602361681625\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -146.89181909748845,\n            \"y\": 174.24602361681625\n        },\n        \"to\": {\n            \"x\": -159.65917552771148,\n            \"y\": 190.94179741018482\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -159.65917552771148,\n            \"y\": 190.94179741018482\n        },\n        \"to\": {\n            \"x\": -174.3386665390129,\n            \"y\": 221.93183398959894\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -174.3386665390129,\n            \"y\": 221.93183398959894\n        },\n        \"to\": {\n            \"x\": -184.26677638162369,\n            \"y\": 258.3349034125051\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -184.26677638162369,\n            \"y\": 258.3349034125051\n        },\n        \"to\": {\n            \"x\": -186.04753411488605,\n            \"y\": 293.95005807775254\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -186.04753411488605,\n            \"y\": 293.95005807775254\n        },\n        \"to\": {\n            \"x\": -188.32221978236743,\n            \"y\": 341.7184570948617\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -188.32221978236743,\n            \"y\": 341.7184570948617\n        },\n        \"to\": {\n            \"x\": -205.8231192137141,\n            \"y\": 391.7210268987094\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -205.8231192137141,\n            \"y\": 391.7210268987094\n        },\n        \"to\": {\n            \"x\": -229.68672030207412,\n            \"y\": 428.6011376716294\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -229.68672030207412,\n            \"y\": 428.6011376716294\n        },\n        \"to\": {\n            \"x\": -252.7835738656453,\n            \"y\": 470.1754740860576\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -252.7835738656453,\n            \"y\": 470.1754740860576\n        },\n        \"to\": {\n            \"x\": -291.2337685139144,\n            \"y\": 501.4162572377762\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -291.2337685139144,\n            \"y\": 501.4162572377762\n        },\n        \"to\": {\n            \"x\": -327.7391441200545,\n            \"y\": 529.3321327012951\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -327.7391441200545,\n            \"y\": 529.3321327012951\n        },\n        \"to\": {\n            \"x\": -373.03210686806807,\n            \"y\": 555.5543742922503\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -373.03210686806807,\n            \"y\": 555.5543742922503\n        },\n        \"to\": {\n            \"x\": -418.4123372276045,\n            \"y\": 566.3591910445208\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -418.4123372276045,\n            \"y\": 566.3591910445208\n        },\n        \"to\": {\n            \"x\": -457.27099540538507,\n            \"y\": 580.6755387942295\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -457.27099540538507,\n            \"y\": 580.6755387942295\n        },\n        \"to\": {\n            \"x\": -502.33527386846,\n            \"y\": 589.2592108824342\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -502.33527386846,\n            \"y\": 589.2592108824342\n        },\n        \"to\": {\n            \"x\": -545.141525714553,\n            \"y\": 597.8204612516529\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -545.141525714553,\n            \"y\": 597.8204612516529\n        },\n        \"to\": {\n            \"x\": -591.0996393026417,\n            \"y\": 599.9094664147477\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -591.0996393026417,\n            \"y\": 599.9094664147477\n        },\n        \"to\": {\n            \"x\": -637.384303100082,\n            \"y\": 604.5379327944918\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -637.384303100082,\n            \"y\": 604.5379327944918\n        },\n        \"to\": {\n            \"x\": -692.3459140041189,\n            \"y\": 589.5484025479362\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -692.3459140041189,\n            \"y\": 589.5484025479362\n        },\n        \"to\": {\n            \"x\": -734.7899151367641,\n            \"y\": 568.3264019816137\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -734.7899151367641,\n            \"y\": 568.3264019816137\n        },\n        \"to\": {\n            \"x\": -777.7084582387633,\n            \"y\": 537.3296764079475\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -777.7084582387633,\n            \"y\": 537.3296764079475\n        },\n        \"to\": {\n            \"x\": -815.296601475479,\n            \"y\": 491.0673462704514\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -815.296601475479,\n            \"y\": 491.0673462704514\n        },\n        \"to\": {\n            \"x\": -818.4746406763646,\n            \"y\": 427.5065622527378\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -818.4746406763646,\n            \"y\": 427.5065622527378\n        },\n        \"to\": {\n            \"x\": -793.8134223176357,\n            \"y\": 378.18412553528003\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -793.8134223176357,\n            \"y\": 378.18412553528003\n        },\n        \"to\": {\n            \"x\": -762.8998156315199,\n            \"y\": 340.1366096139066\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -762.8998156315199,\n            \"y\": 340.1366096139066\n        },\n        \"to\": {\n            \"x\": -728.8233659339762,\n            \"y\": 310.3197161285559\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -728.8233659339762,\n            \"y\": 310.3197161285559\n        },\n        \"to\": {\n            \"x\": -694.0861600338785,\n            \"y\": 277.8983239551314\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -694.0861600338785,\n            \"y\": 277.8983239551314\n        },\n        \"to\": {\n            \"x\": -648.6828558708681,\n            \"y\": 258.7811432549165\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -648.6828558708681,\n            \"y\": 258.7811432549165\n        },\n        \"to\": {\n            \"x\": -615.4981225591372,\n            \"y\": 246.55518887691034\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -615.4981225591372,\n            \"y\": 246.55518887691034\n        },\n        \"to\": {\n            \"x\": -590.0589626835248,\n            \"y\": 227.1017136779127\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -590.0589626835248,\n            \"y\": 227.1017136779127\n        },\n        \"to\": {\n            \"x\": -570.647946433762,\n            \"y\": 203.211232139743\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -570.647946433762,\n            \"y\": 203.211232139743\n        },\n        \"to\": {\n            \"x\": -562.8430932013591,\n            \"y\": 184.6747057127862\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -562.8430932013591,\n            \"y\": 184.6747057127862\n        },\n        \"to\": {\n            \"x\": -564.6283512451205,\n            \"y\": 179.57396844489648\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -564.6283512451205,\n            \"y\": 179.57396844489648\n        },\n        \"to\": {\n            \"x\": -579.9054373358751,\n            \"y\": 175.7546969222078\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -579.9054373358751,\n            \"y\": 175.7546969222078\n        },\n        \"to\": {\n            \"x\": -608.1768214704184,\n            \"y\": 174.34112771548067\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -608.1768214704184,\n            \"y\": 174.34112771548067\n        },\n        \"to\": {\n            \"x\": -640.4779844662462,\n            \"y\": 185.64653476402034\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -640.4779844662462,\n            \"y\": 185.64653476402034\n        },\n        \"to\": {\n            \"x\": -678.4779844662462,\n            \"y\": 199.64653476402037\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -678.4779844662462,\n            \"y\": 199.64653476402037\n        },\n        \"to\": {\n            \"x\": -721.419439386054,\n            \"y\": 214.6760439859531\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -721.419439386054,\n            \"y\": 214.6760439859531\n        },\n        \"to\": {\n            \"x\": -771.0152592102031,\n            \"y\": 224.5952079507829\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -771.0152592102031,\n            \"y\": 224.5952079507829\n        },\n        \"to\": {\n            \"x\": -834.8273763078705,\n            \"y\": 215.0233903861328\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -834.8273763078705,\n            \"y\": 215.0233903861328\n        },\n        \"to\": {\n            \"x\": -871.7140977794517,\n            \"y\": 162.76720163472626\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -871.7140977794517,\n            \"y\": 162.76720163472626\n        },\n        \"to\": {\n            \"x\": -890.7180162153542,\n            \"y\": 111.18513730870514\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -890.7180162153542,\n            \"y\": 111.18513730870514\n        },\n        \"to\": {\n            \"x\": -884.457591733443,\n            \"y\": 48.58089248959409\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -884.457591733443,\n            \"y\": 48.58089248959409\n        },\n        \"to\": {\n            \"x\": -841.4057831795941,\n            \"y\": 2.4539547533274457\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -841.4057831795941,\n            \"y\": 2.4539547533274457\n        },\n        \"to\": {\n            \"x\": -810.5415231527235,\n            \"y\": -10.541523152723343\n        }\n    },\n    {\n        \"from\": {\n            \"x\": -810.5415231527235,\n            \"y\": -10.541523152723343\n        },\n        \"to\": {\n            \"x\": -810,\n            \"y\": -11.827640640441587\n        }\n    }\n]","import React from 'react'\nimport carIcon from '../../assets/car_icon.svg'\nimport './Logo.css'\n\nconst Logo: React.SFC = () => {\n  return (\n    <div className=\"logo\">\n      <img className=\"icon\" alt=\"logo\" src={carIcon} />\n      <div className=\"title\"> Self-Driving Cars </div>\n    </div>\n  )\n}\n\nexport default Logo\n","import React from 'react'\nimport './Button.css'\n\nconst Button: React.SFC<any> = ({ children, ...props }) => {\n  return (\n    <button className=\"button\" {...props}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport Logo from '../Logo/Logo'\nimport Button from '../Button/Button'\n// import trackIcon from '../../assets/track.svg'\nimport resetIcon from '../../assets/reset.svg'\nimport playIcon from '../../assets/play.svg'\nimport { RAY_NUMBER } from '../../constants'\n\nimport './ActionMenu.css'\n\ninterface ActionMenuProps {\n  canvasRef: any\n  setCreateMode(state: boolean): void\n  setPlay(state: boolean): void\n  play: boolean\n  activeCarsNumber: number\n  gen: number\n  setactiveCars(x: any): void\n  reset(): void\n}\n\nconst ActionMenu: React.SFC<ActionMenuProps> = ({\n  setPlay,\n  play,\n  activeCarsNumber,\n  gen,\n  setCreateMode,\n  reset,\n}) => {\n  const onStart = () => {\n    if (play) {\n      reset()\n    } else setPlay(!play)\n  }\n\n  const startButtonText = play ? 'Reset' : 'Play'\n  const startButtonIcon = play ? (\n    <img className=\"icon\" alt=\"play\" src={resetIcon} />\n  ) : (\n    <img className=\"icon\" alt=\"play\" src={playIcon} />\n  )\n\n  return (\n    <div className=\"action_menu\">\n      <Logo />\n\n      <div className=\"section\">\n        <h4>Current status</h4>\n\n        <div> Generation : {gen}</div>\n        <div>Cars : {activeCarsNumber}</div>\n        <div> Rays: {RAY_NUMBER}</div>\n        <div className=\"play_button\">\n          <Button onClick={onStart}>\n            {startButtonIcon}\n            <div className=\"icon_text\">{startButtonText}</div>\n          </Button>\n        </div>\n      </div>\n      {/* <div className=\"section\">\n        <h4>Custom Track</h4>\n        <Button onClick={setCreateMode}>\n          <img className=\"icon\" alt=\"track\" src={trackIcon} />\n          <div className=\"icon_text\">Create Track</div>\n        </Button>\n      </div> */}\n    </div>\n  )\n}\n\nexport default ActionMenu\n","// @ts-ignore\n// @ts-nocheck\n\nimport React, { useState, useRef } from 'react'\nimport { getCanvas } from '../components/Canvas/utils'\nimport { Canvas, ActionMenu, Car } from '../components'\nimport { FIRST_CAR_COLOR } from '../constants'\n// import Track from '../components/Canvas/Track'\n// import { CANVAS_RES } from '../constants/canvas'\n\nlet dummyScore = 0\n\nconst App: React.SFC = () => {\n  const [isCreateMode, setCreateMode] = useState(false)\n  const [activeCars, setactiveCars] = useState([])\n  const [play, setPlay] = useState(false)\n  const [carPosition, setCarPosition] = useState({ x: 0, y: 0 })\n  // const [gameId, setGameId] = useState(1)\n\n  const [activeCarsNumber, setActiveCarsNumber] = useState(0)\n  const [gen, setGen] = useState(0)\n\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n\n  const drawCars = (cars = activeCars, maxScore = dummyScore) => {\n    let bestCarDrawn = false\n\n    for (let car of cars) {\n      if (car.score === maxScore && !bestCarDrawn) {\n        car.drawCar(FIRST_CAR_COLOR)\n        car.drawRays()\n        bestCarDrawn = true\n      } else car.drawCar()\n      car.rayTrace()\n    }\n  }\n\n  const createCars = (num: number, position = carPosition) => {\n    const { context } = getCanvas(canvasRef)\n    let cars = []\n    for (var j = 0; j < num; j++) {\n      let car = new Car(context, null, position)\n      cars[j] = car\n    }\n    setactiveCars(cars)\n    drawCars(cars)\n  }\n\n  const reset = () => {\n    window.location.reload()\n    // const { context } = getCanvas(canvasRef)\n    // if (context) {\n    //   context.clearRect(\n    //     -context.canvas.width,\n    //     -context.canvas.height,\n    //     context.canvas.width * CANVAS_RES,\n    //     context.canvas.height * CANVAS_RES\n    //   )\n    // }\n    // Track.reset()\n    // setPlay(false)\n    // setactiveCars([])\n    // setGen(0)\n    // setGameId(gameId + 1)\n  }\n\n  const onCreateMode = () => {\n    reset()\n    setCreateMode(true)\n  }\n\n  return (\n    <div className=\"App\">\n      <ActionMenu\n        reset={reset}\n        // gameId={gameId}\n        gen={gen}\n        setactiveCars={setactiveCars}\n        activeCarsNumber={activeCarsNumber}\n        setCreateMode={onCreateMode}\n        setPlay={setPlay}\n        play={play}\n      />\n      <Canvas\n        // key={gameId}\n        carPosition={carPosition}\n        setCarPosition={setCarPosition}\n        gen={gen}\n        setGen={setGen}\n        setCreateMode={setCreateMode}\n        setActiveCarsNumber={setActiveCarsNumber}\n        isCreateMode={isCreateMode}\n        canvasRef={canvasRef}\n        drawCars={drawCars}\n        activeCars={activeCars}\n        play={play}\n        setActiveCars={setactiveCars}\n        createCars={createCars}\n      />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}